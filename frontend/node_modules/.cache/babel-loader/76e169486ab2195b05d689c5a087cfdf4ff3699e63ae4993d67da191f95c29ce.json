{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/ScreeningInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment/moment'; // Import moment.js library\nimport './ScreeningInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScreeningInfo() {\n  _s();\n  const [screeningInfo, setScreeningInfo] = useState(null);\n  const {\n    id\n  } = useParams(); // Accessing path parameters using useParams\n\n  useEffect(() => {\n    fetch(`http://localhost:8080/screenings/info/${id}`).then(response => response.json()).then(data => {\n      setScreeningInfo(data);\n    }).catch(error => console.error(error));\n  }, [id]);\n  const formatScreeningTime = timestampInMilliseconds => {\n    const dateObject = new Date(timestampInMilliseconds);\n    return moment(dateObject).format('dddd, HH:mm'); // Use moment.js for formatting\n  };\n  if (!screeningInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screening-info-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: screeningInfo.movie.movieName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: [\"Rating: \", screeningInfo.movie.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: [\"Release Year: \", screeningInfo.movie.releaseYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: [\"Runtime: \", screeningInfo.movie.runTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: [\"Screening Time: \", formatScreeningTime(screeningInfo.screening.startTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: [\"Room: \", screeningInfo.room.room_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: screeningInfo.movie.picUrl,\n          alt: screeningInfo.movie.movieName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(ScreeningInfo, \"lbQIqFB7W4cx4L2Gju31sFbFYxw=\", false, function () {\n  return [useParams];\n});\n_c = ScreeningInfo;\nexport default ScreeningInfo;\nvar _c;\n$RefreshReg$(_c, \"ScreeningInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","moment","jsxDEV","_jsxDEV","ScreeningInfo","_s","screeningInfo","setScreeningInfo","id","fetch","then","response","json","data","catch","error","console","formatScreeningTime","timestampInMilliseconds","dateObject","Date","format","children","fileName","_jsxFileName","lineNumber","columnNumber","className","movie","movieName","style","fontWeight","rating","releaseYear","runTime","screening","startTime","room","room_name","src","picUrl","alt","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/ScreeningInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment/moment'; // Import moment.js library\nimport './ScreeningInfo.css';\n\n\nfunction ScreeningInfo() {\n    const [screeningInfo, setScreeningInfo] = useState(null);\n    const { id } = useParams(); // Accessing path parameters using useParams\n\n    useEffect(() => {\n        fetch(`http://localhost:8080/screenings/info/${id}`)\n            .then(response => response.json())\n            .then(data => {\n                setScreeningInfo(data);\n            })\n            .catch(error => console.error(error));\n    }, [id]);\n\n    const formatScreeningTime = (timestampInMilliseconds) => {\n        const dateObject = new Date(timestampInMilliseconds);\n        return moment(dateObject).format('dddd, HH:mm'); // Use moment.js for formatting\n    };\n\n    if (!screeningInfo) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"screening-info-container\">\n            <h2>{screeningInfo.movie.movieName}</h2>\n            <div className=\"movie-details\">\n                <div className=\"movie-info\">\n                    <p style={{ fontWeight: 'bold' }}>Rating: {screeningInfo.movie.rating}</p>\n                    <p style={{ fontWeight: 'bold' }}>Release Year: {screeningInfo.movie.releaseYear}</p>\n                    <p style={{ fontWeight: 'bold' }}>Runtime: {screeningInfo.movie.runTime}</p>\n                    <p style={{ fontWeight: 'bold' }}>Screening Time: {formatScreeningTime(screeningInfo.screening.startTime)}</p>\n                    <p style={{ fontWeight: 'bold' }}>Room: {screeningInfo.room.room_name}</p>\n                </div>\n                <div className=\"movie-image\">\n                    <img src={screeningInfo.movie.picUrl} alt={screeningInfo.movie.movieName} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScreeningInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}