{"ast":null,"code":"async function fetchMovieScreenings(movieId) {\n  const response = await fetch(`/screenings/movie/${movieId}`);\n  const data = await response.json();\n  if (!data.movie) {\n    // Handle movie not found scenario (e.g., display error message)\n    console.error(\"Movie not found\");\n    return;\n  }\n  const movie = data.movie;\n  const screenings = data.screenings;\n\n  // Update UI elements with movie information\n  document.getElementById(\"movie-title\").textContent = movie.movieName;\n  document.getElementById(\"movie-release-year\").textContent = movie.releaseYear;\n  document.getElementById(\"movie-poster\").src = movie.picUrl; // Assuming picUrl contains the image URL\n  // Update UI elements with screenings information (loop through screenings)\n  const screeningsList = document.getElementById(\"screenings-list\");\n  screeningsList.innerHTML = \"\"; // Clear existing screenings\n\n  for (const screening of screenings) {\n    const screeningItem = document.createElement(\"li\");\n    screeningItem.classList.add(\"screening-item\");\n    const screeningInfo = `\n      ${screening.screening.screeningDate} - ${screening.screening.screeningTime} - Room: ${screening.room.roomName}\n    `;\n    screeningItem.textContent = screeningInfo;\n\n    // Add event listener for booking functionality (optional)\n    screeningItem.addEventListener(\"click\", () => {\n      // Handle click event to navigate to booking page or perform booking action\n    });\n    screeningsList.appendChild(screeningItem);\n  }\n}\n\n// Call the function with the desired movie ID\nfetchMovieScreenings(yourMovieIdHere);","map":{"version":3,"names":["fetchMovieScreenings","movieId","response","fetch","data","json","movie","console","error","screenings","document","getElementById","textContent","movieName","releaseYear","src","picUrl","screeningsList","innerHTML","screening","screeningItem","createElement","classList","add","screeningInfo","screeningDate","screeningTime","room","roomName","addEventListener","appendChild","yourMovieIdHere"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/MovieScreenings.js"],"sourcesContent":["async function fetchMovieScreenings(movieId) {\n    const response = await fetch(`/screenings/movie/${movieId}`);\n    const data = await response.json();\n\n    if (!data.movie) {\n        // Handle movie not found scenario (e.g., display error message)\n        console.error(\"Movie not found\");\n        return;\n    }\n\n    const movie = data.movie;\n    const screenings = data.screenings;\n\n    // Update UI elements with movie information\n    document.getElementById(\"movie-title\").textContent = movie.movieName;\n    document.getElementById(\"movie-release-year\").textContent = movie.releaseYear;\n    document.getElementById(\"movie-poster\").src = movie.picUrl; // Assuming picUrl contains the image URL\n    // Update UI elements with screenings information (loop through screenings)\n    const screeningsList = document.getElementById(\"screenings-list\");\n    screeningsList.innerHTML = \"\"; // Clear existing screenings\n\n    for (const screening of screenings) {\n        const screeningItem = document.createElement(\"li\");\n        screeningItem.classList.add(\"screening-item\");\n\n        const screeningInfo = `\n      ${screening.screening.screeningDate} - ${screening.screening.screeningTime} - Room: ${screening.room.roomName}\n    `;\n        screeningItem.textContent = screeningInfo;\n\n        // Add event listener for booking functionality (optional)\n        screeningItem.addEventListener(\"click\", () => {\n            // Handle click event to navigate to booking page or perform booking action\n        });\n\n        screeningsList.appendChild(screeningItem);\n    }\n}\n\n\n\n// Call the function with the desired movie ID\nfetchMovieScreenings(yourMovieIdHere);\n"],"mappings":"AAAA,eAAeA,oBAAoBA,CAACC,OAAO,EAAE;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qBAAoBF,OAAQ,EAAC,CAAC;EAC5D,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAElC,IAAI,CAACD,IAAI,CAACE,KAAK,EAAE;IACb;IACAC,OAAO,CAACC,KAAK,CAAC,iBAAiB,CAAC;IAChC;EACJ;EAEA,MAAMF,KAAK,GAAGF,IAAI,CAACE,KAAK;EACxB,MAAMG,UAAU,GAAGL,IAAI,CAACK,UAAU;;EAElC;EACAC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,WAAW,GAAGN,KAAK,CAACO,SAAS;EACpEH,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,CAACC,WAAW,GAAGN,KAAK,CAACQ,WAAW;EAC7EJ,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACI,GAAG,GAAGT,KAAK,CAACU,MAAM,CAAC,CAAC;EAC5D;EACA,MAAMC,cAAc,GAAGP,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;EACjEM,cAAc,CAACC,SAAS,GAAG,EAAE,CAAC,CAAC;;EAE/B,KAAK,MAAMC,SAAS,IAAIV,UAAU,EAAE;IAChC,MAAMW,aAAa,GAAGV,QAAQ,CAACW,aAAa,CAAC,IAAI,CAAC;IAClDD,aAAa,CAACE,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAE7C,MAAMC,aAAa,GAAI;AAC/B,QAAQL,SAAS,CAACA,SAAS,CAACM,aAAc,MAAKN,SAAS,CAACA,SAAS,CAACO,aAAc,YAAWP,SAAS,CAACQ,IAAI,CAACC,QAAS;AACpH,KAAK;IACGR,aAAa,CAACR,WAAW,GAAGY,aAAa;;IAEzC;IACAJ,aAAa,CAACS,gBAAgB,CAAC,OAAO,EAAE,MAAM;MAC1C;IAAA,CACH,CAAC;IAEFZ,cAAc,CAACa,WAAW,CAACV,aAAa,CAAC;EAC7C;AACJ;;AAIA;AACApB,oBAAoB,CAAC+B,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}