{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/GuestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Guest.css';\nimport moment from 'moment/moment'; // Import moment.js library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GuestPage() {\n  _s();\n  const [screeningsData, setScreeningsData] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:8080/screenings/allScreeningTimesByMovies').then(response => response.json()).then(data => {\n      setScreeningsData(data);\n    }).catch(error => console.error(error));\n  }, []);\n  const formatScreeningTime = timestampInMilliseconds => {\n    const dateObject = new Date(timestampInMilliseconds);\n    return moment(dateObject).format('dddd, HH:mm'); // Use moment.js for formatting\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guest-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome as Guest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screenings-container\",\n      children: Object.entries(screeningsData).map(([movie, screenings]) => {\n        var _movie$movie, _movie$movie2, _movie$movie3, _movie$movie4;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: (_movie$movie = movie.movie) === null || _movie$movie === void 0 ? void 0 : _movie$movie.movieName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", (_movie$movie2 = movie.movie) === null || _movie$movie2 === void 0 ? void 0 : _movie$movie2.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release Year: \", (_movie$movie3 = movie.movie) === null || _movie$movie3 === void 0 ? void 0 : _movie$movie3.releaseYear]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Runtime: \", (_movie$movie4 = movie.movie) === null || _movie$movie4 === void 0 ? void 0 : _movie$movie4.runTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"screening-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Screening Times:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: screenings && screenings.length > 0 ? screenings.map(screening => {\n                var _screening$room;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [formatScreeningTime(screening.startTime), \" - Room: \", ((_screening$room = screening.room) === null || _screening$room === void 0 ? void 0 : _screening$room.name) || 'Room name not available']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 45\n                  }, this)\n                }, screening.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 41\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No screenings available for this movie.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(GuestPage, \"qq2/Iy9c03+z6gNdLXVgUPkwQCo=\");\n_c = GuestPage;\nexport default GuestPage;\nvar _c;\n$RefreshReg$(_c, \"GuestPage\");","map":{"version":3,"names":["React","useState","useEffect","moment","jsxDEV","_jsxDEV","GuestPage","_s","screeningsData","setScreeningsData","fetch","then","response","json","data","catch","error","console","formatScreeningTime","timestampInMilliseconds","dateObject","Date","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","movie","screenings","_movie$movie","_movie$movie2","_movie$movie3","_movie$movie4","movieName","rating","releaseYear","runTime","length","screening","_screening$room","startTime","room","name","id","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/GuestPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Guest.css';\nimport moment from 'moment/moment'; // Import moment.js library\n\nfunction GuestPage() {\n    const [screeningsData, setScreeningsData] = useState({});\n\n    useEffect(() => {\n        fetch('http://localhost:8080/screenings/allScreeningTimesByMovies')\n            .then(response => response.json())\n            .then(data => {\n                setScreeningsData(data);\n            })\n            .catch(error => console.error(error));\n    }, []);\n\n    const formatScreeningTime = (timestampInMilliseconds) => {\n        const dateObject = new Date(timestampInMilliseconds);\n        return moment(dateObject).format('dddd, HH:mm'); // Use moment.js for formatting\n    };\n\n    return (\n        <div className=\"guest-page\">\n            <h1>Welcome as Guest</h1>\n            <div className=\"screenings-container\">\n                {/* Map over screeningsData to display movie details and screening times */}\n                {Object.entries(screeningsData).map(([movie, screenings]) => (\n                    <div key={movie.id} className=\"movie-container\">\n                        <h3>{movie.movie?.movieName}</h3>\n                        <p>Rating: {movie.movie?.rating}</p>\n                        <p>Release Year: {movie.movie?.releaseYear}</p>\n                        <p>Runtime: {movie.movie?.runTime}</p>\n                        <div className=\"screening-info\">\n                            <h4>Screening Times:</h4>\n                            <ul>\n                                {screenings && screenings.length > 0 ? (\n                                    screenings.map(screening => (\n                                        <li key={screening.id}>\n                                            {/* Use formatScreeningTime function to convert timestamp */}\n                                            <p>{formatScreeningTime(screening.startTime)} - Room: {screening.room?.name || 'Room name not available'}</p>\n                                        </li>\n                                    ))\n                                ) : (\n                                    <p>No screenings available for this movie.</p>\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n\n\n}\n\nexport default GuestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}