{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/GuestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../style/Guest.css';\nimport moment from 'moment/moment'; // Import moment.js library\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GuestPage() {\n  _s();\n  const [screeningsData, setScreeningsData] = useState({});\n  useEffect(() => {\n    fetchMovieScreeningsData();\n  }, []);\n  const fetchMovieScreeningsData = () => {\n    fetch('http://localhost:8080/screenings/movie/99') // Replace '99' with the appropriate movie ID\n    .then(response => response.json()).then(data => {\n      setScreeningsData(data);\n    }).catch(error => console.error(error));\n  };\n  const formatScreeningTime = timestampInMilliseconds => {\n    const dateObject = new Date(timestampInMilliseconds);\n    const day = moment(dateObject).format('Do'); // Get the day with ordinal suffix (e.g., 1st, 2nd, 3rd)\n    const monthYear = moment(dateObject).format('MMMM YYYY'); // Get the month and year\n    const time = moment(dateObject).format('HH:mm'); // Get the time\n    return `${day} of ${monthYear}, ${time}`; // Concatenate the day, month/year, and time\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guest-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome as Guest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screenings-container\",\n      children: Object.entries(screeningsData).map(([movie, screeningInfos]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", movie.movie.movieName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Year: \", movie.releaseYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Runtime: \", movie.runTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screening-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Screening Times:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: screeningInfos && screeningInfos.length > 0 ? screeningInfos.map(screening => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/screenings/info/${screening.screening.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"screening-button\",\n                  children: formatScreeningTime(screening.screening.startTime)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 45\n              }, this)\n            }, screening.screening.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No screenings available for this movie.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, movie, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(GuestPage, \"qq2/Iy9c03+z6gNdLXVgUPkwQCo=\");\n_c = GuestPage;\nexport default GuestPage;\nvar _c;\n$RefreshReg$(_c, \"GuestPage\");","map":{"version":3,"names":["React","useState","useEffect","moment","Link","jsxDEV","_jsxDEV","GuestPage","_s","screeningsData","setScreeningsData","fetchMovieScreeningsData","fetch","then","response","json","data","catch","error","console","formatScreeningTime","timestampInMilliseconds","dateObject","Date","day","format","monthYear","time","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","movie","screeningInfos","movieName","releaseYear","runTime","length","screening","to","id","startTime","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/GuestPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../style/Guest.css';\nimport moment from 'moment/moment'; // Import moment.js library\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\n\nfunction GuestPage() {\n    const [screeningsData, setScreeningsData] = useState({});\n\n    useEffect(() => {\n        fetchMovieScreeningsData();\n    }, []);\n\n    const fetchMovieScreeningsData = () => {\n        fetch('http://localhost:8080/screenings/movie/99') // Replace '99' with the appropriate movie ID\n            .then(response => response.json())\n            .then(data => {\n                setScreeningsData(data);\n            })\n            .catch(error => console.error(error));\n    };\n\n    const formatScreeningTime = (timestampInMilliseconds) => {\n        const dateObject = new Date(timestampInMilliseconds);\n        const day = moment(dateObject).format('Do'); // Get the day with ordinal suffix (e.g., 1st, 2nd, 3rd)\n        const monthYear = moment(dateObject).format('MMMM YYYY'); // Get the month and year\n        const time = moment(dateObject).format('HH:mm'); // Get the time\n        return `${day} of ${monthYear}, ${time}`; // Concatenate the day, month/year, and time\n    };\n\n    return (\n        <div className=\"guest-page\">\n            <h1>Welcome as Guest</h1>\n            <div className=\"screenings-container\">\n                {/* Map over screeningsData to display movie information and screening times */}\n                {Object.entries(screeningsData).map(([movie, screeningInfos]) => (\n                    <div key={movie} className=\"movie-container\">\n                        <h3>{movie}</h3>\n                        <p>Rating: {movie.movie.movieName}</p>\n                        <p>Release Year: {movie.releaseYear}</p>\n                        <p>Runtime: {movie.runTime}</p>\n                        <div className=\"screening-info\">\n                            <h4>Screening Times:</h4>\n                            <ul>\n                                {screeningInfos && screeningInfos.length > 0 ? (\n                                    screeningInfos.map(screening => (\n                                        <li key={screening.screening.id}>\n                                            {/* Use Link to forward the user to a page with more information */}\n                                            <Link to={`/screenings/info/${screening.screening.id}`}>\n                                                <button className=\"screening-button\">\n                                                    {formatScreeningTime(screening.screening.startTime)}\n                                                </button>\n                                            </Link>\n                                        </li>\n                                    ))\n                                ) : (\n                                    <p>No screenings available for this movie.</p>\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default GuestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}