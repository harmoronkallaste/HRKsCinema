{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/ScreeningInfo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from '../style/ScreeningInfo.module.css';\nimport moment from \"moment/moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicketCounter({\n  title,\n  price,\n  selectedSeats,\n  onIncrement,\n  onDecrement\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.ticketCounter,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ticketDescription,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.ticketPriceStyle,\n        children: [price, \" \\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.counterControls,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.counterButton} ${styles.decrementButton}`,\n        onClick: onDecrement,\n        disabled: selectedSeats === 0,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedSeats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.counterButton} ${styles.incrementButton}`,\n        onClick: onIncrement,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = TicketCounter;\nfunction Seat({\n  isOccupied,\n  isVip,\n  seatNumber,\n  onSelect,\n  isSelected\n}) {\n  const occupiedClass = isOccupied ? styles.occupied : ''; // Determine this based on your CSS\n  const seatClasses = `${styles.seat} ${occupiedClass} ${isVip ? styles.vip : ''} ${isSelected ? styles.selected : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: seatClasses,\n    onClick: !isOccupied ? () => onSelect(seatNumber, isVip) : undefined,\n    tabIndex: \"0\",\n    children: !isOccupied && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.seatNumber,\n      children: seatNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Seat;\nfunction ScreeningInfo() {\n  _s();\n  const [occupancyMatrix, setOccupancyMatrix] = useState([]);\n  const [screeningInfo, setScreeningInfo] = useState(null);\n  const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n  const {\n    id\n  } = useParams();\n  const totalSeats = 100;\n  useEffect(() => {\n    fetch(`http://localhost:8080/screenings/info/${id}`).then(response => response.json()).then(data => setScreeningInfo(data)).catch(error => console.error(error));\n    fetch(`http://localhost:8080/reservations/howManyReserved/${id}`).then(response => response.json()).then(data => setNumberOfReservedSeats(data)).catch(error => console.error(error));\n    fetchOccupancyMatrix();\n  }, [id]);\n  const fetchOccupancyMatrix = async () => {\n    const response = await fetch('http://localhost:8080/recommendation/occupancy', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({}) // No need to send any specific data for occupancy fetch\n    });\n    if (response.ok) {\n      const matrix = await response.json();\n      setOccupancyMatrix(matrix);\n    }\n  };\n  const formatScreeningTime = timestamp => {\n    return moment(timestamp).format('dddd HH:mm, MMM Do YYYY');\n  };\n  if (!screeningInfo || numberOfReservedSeats === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.screeningInfoBody,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.movieContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.basicInformation,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.movieTitle,\n          children: [\" \", screeningInfo.movie.movieName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.dateTitle,\n          children: formatScreeningTime(screeningInfo.screening.startTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.roomTitle,\n          children: [\" \", screeningInfo.room.room_name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.movieDetails,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.moviePoster,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: screeningInfo.movie.picUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SeatingArea, {\n      occupiedSeatsCount: numberOfReservedSeats,\n      totalSeats: totalSeats,\n      screeningInfo: screeningInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(ScreeningInfo, \"el0GzLluqQJQBNdsITBNoGl/2AQ=\", false, function () {\n  return [useParams];\n});\n_c3 = ScreeningInfo;\nfunction SeatingArea({\n  occupiedSeatsCount,\n  totalSeats,\n  screeningInfo\n}) {\n  _s2();\n  const [seats, setSeats] = useState([]);\n  const [selectedSeats, setSelectedSeats] = useState(new Set());\n  const [selectedVipSeats, setSelectedVipSeats] = useState(new Set());\n  useEffect(() => {\n    let newSeats = Array(totalSeats).fill(false);\n    let occupiedIndices = new Set();\n    while (occupiedIndices.size < occupiedSeatsCount) {\n      let randomIndex = Math.floor(Math.random() * totalSeats);\n      if (!occupiedIndices.has(randomIndex)) {\n        occupiedIndices.add(randomIndex);\n        newSeats[randomIndex] = true;\n      }\n    }\n    setSeats(newSeats);\n  }, [occupiedSeatsCount, totalSeats]);\n  const handleSelectSeat = (seatNumber, isVip) => {\n    if (isVip) {\n      setSelectedVipSeats(prev => new Set(prev.has(seatNumber) ? [...prev].filter(x => x !== seatNumber) : [...prev, seatNumber]));\n    } else {\n      setSelectedSeats(prev => new Set(prev.has(seatNumber) ? [...prev].filter(x => x !== seatNumber) : [...prev, seatNumber]));\n    }\n  };\n  const rows = 10;\n  const cols = 10;\n  const handleIncrement = isVip => {\n    // Find the first available seat that is not occupied and not selected\n    for (let i = 0; i < seats.length; i++) {\n      const seatIsVip = i >= (rows - 1) * cols; // Assumes last row is VIP\n      if (!seats[i] && seatIsVip === isVip && !(selectedSeats.has(i) || selectedVipSeats.has(i))) {\n        if (isVip) {\n          setSelectedVipSeats(new Set(selectedVipSeats).add(i));\n        } else {\n          setSelectedSeats(new Set(selectedSeats).add(i));\n        }\n        break;\n      }\n    }\n  };\n  const handleDecrement = isVip => {\n    // Deselect the last selected seat of the appropriate type\n    if (isVip) {\n      if (selectedVipSeats.size > 0) {\n        const updatedVipSeats = new Set(selectedVipSeats);\n        const lastSelected = Array.from(updatedVipSeats).pop(); // Get the last element\n        updatedVipSeats.delete(lastSelected);\n        setSelectedVipSeats(updatedVipSeats);\n      }\n    } else {\n      if (selectedSeats.size > 0) {\n        const updatedSeats = new Set(selectedSeats);\n        const lastSelected = Array.from(updatedSeats).pop(); // Get the last element\n        updatedSeats.delete(lastSelected);\n        setSelectedSeats(updatedSeats);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.seatingContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ticketSelectionArea,\n      children: [/*#__PURE__*/_jsxDEV(TicketCounter, {\n        title: \"Basic seat\",\n        price: screeningInfo.room.basicSeatPrice,\n        selectedSeats: selectedSeats.size,\n        onIncrement: () => handleIncrement(false),\n        onDecrement: () => handleDecrement(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TicketCounter, {\n        title: \"VIP seat\",\n        price: screeningInfo.room.vipSeatPrice,\n        selectedSeats: selectedVipSeats.size,\n        onIncrement: () => handleIncrement(true),\n        onDecrement: () => handleDecrement(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.seatingInformation,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.seatingTitle,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \" Available seats: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 53\n        }, this), \" \", totalSeats - occupiedSeatsCount, \" / \", totalSeats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.seatingArea,\n      children: Array.from({\n        length: rows\n      }, (_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: [Array.from({\n          length: cols\n        }, (_, colIndex) => {\n          // Compute isOccupied here for each seat\n          const isOccupied = occupancyMatrix.length > 0 && occupancyMatrix[rowIndex] && occupancyMatrix[rowIndex][colIndex] === 1;\n\n          // Determine if the seat is selected\n          const seatId = rowIndex * cols + colIndex;\n          const isSelected = selectedSeats.has(seatId) || selectedVipSeats.has(seatId);\n          return /*#__PURE__*/_jsxDEV(Seat, {\n            isOccupied: isOccupied,\n            isVip: rowIndex === rows - 1 // Assuming last row is VIP as per your logic\n            ,\n            seatNumber: colIndex + 1,\n            onSelect: () => handleSelectSeat(seatId, rowIndex === rows - 1),\n            isSelected: isSelected\n          }, seatId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.rowNumber,\n          children: rowIndex + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.screen,\n      children: \"Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.confirmTicketsButton,\n      children: \"Confirm tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n}\n_s2(SeatingArea, \"ylmwcJ5TrE8eblrZHiQplSa59xA=\");\n_c4 = SeatingArea;\nexport default ScreeningInfo;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TicketCounter\");\n$RefreshReg$(_c2, \"Seat\");\n$RefreshReg$(_c3, \"ScreeningInfo\");\n$RefreshReg$(_c4, \"SeatingArea\");","map":{"version":3,"names":["React","useState","useEffect","useParams","styles","moment","jsxDEV","_jsxDEV","TicketCounter","title","price","selectedSeats","onIncrement","onDecrement","className","ticketCounter","children","ticketDescription","fileName","_jsxFileName","lineNumber","columnNumber","ticketPriceStyle","counterControls","counterButton","decrementButton","onClick","disabled","incrementButton","_c","Seat","isOccupied","isVip","seatNumber","onSelect","isSelected","occupiedClass","occupied","seatClasses","seat","vip","selected","undefined","tabIndex","_c2","ScreeningInfo","_s","occupancyMatrix","setOccupancyMatrix","screeningInfo","setScreeningInfo","numberOfReservedSeats","setNumberOfReservedSeats","id","totalSeats","fetch","then","response","json","data","catch","error","console","fetchOccupancyMatrix","method","headers","body","JSON","stringify","ok","matrix","formatScreeningTime","timestamp","format","screeningInfoBody","movieContainer","basicInformation","movieTitle","movie","movieName","dateTitle","screening","startTime","roomTitle","room","room_name","movieDetails","moviePoster","src","picUrl","SeatingArea","occupiedSeatsCount","_c3","_s2","seats","setSeats","setSelectedSeats","Set","selectedVipSeats","setSelectedVipSeats","newSeats","Array","fill","occupiedIndices","size","randomIndex","Math","floor","random","has","add","handleSelectSeat","prev","filter","x","rows","cols","handleIncrement","i","length","seatIsVip","handleDecrement","updatedVipSeats","lastSelected","from","pop","delete","updatedSeats","seatingContainer","ticketSelectionArea","basicSeatPrice","vipSeatPrice","seatingInformation","seatingTitle","seatingArea","_","rowIndex","row","colIndex","seatId","rowNumber","screen","confirmTicketsButton","_c4","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/ScreeningInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from '../style/ScreeningInfo.module.css';\nimport moment from \"moment/moment\";\n\nfunction TicketCounter({ title, price, selectedSeats, onIncrement, onDecrement }) {\n    return (\n        <div className={styles.ticketCounter}>\n            <div className={styles.ticketDescription}>\n                <span>{title}</span>\n                <span className={styles.ticketPriceStyle}>{price} €</span>\n            </div>\n            <div className={styles.counterControls}>\n                <button className={`${styles.counterButton} ${styles.decrementButton}`} onClick={onDecrement} disabled={selectedSeats === 0}>-</button>\n                <span>{selectedSeats}</span>\n                <button className={`${styles.counterButton} ${styles.incrementButton}`} onClick={onIncrement}>+</button>\n            </div>\n        </div>\n    );\n}\n\nfunction Seat({ isOccupied, isVip, seatNumber, onSelect, isSelected }) {\n    const occupiedClass = isOccupied ? styles.occupied : ''; // Determine this based on your CSS\n    const seatClasses = `${styles.seat} ${occupiedClass} ${isVip ? styles.vip : ''} ${isSelected ? styles.selected : ''}`;\n\n    return (\n        <div\n            className={seatClasses}\n            onClick={!isOccupied ? () => onSelect(seatNumber, isVip) : undefined}\n            tabIndex=\"0\"\n        >\n            {!isOccupied && (\n                <span className={styles.seatNumber}>{seatNumber}</span>\n            )}\n        </div>\n    );\n}\n\nfunction ScreeningInfo() {\n    const [occupancyMatrix, setOccupancyMatrix] = useState([]);\n    const [screeningInfo, setScreeningInfo] = useState(null);\n    const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n    const {id} = useParams();\n    const totalSeats = 100;\n\n    useEffect(() => {\n        fetch(`http://localhost:8080/screenings/info/${id}`)\n            .then(response => response.json())\n            .then(data => setScreeningInfo(data))\n            .catch(error => console.error(error));\n\n        fetch(`http://localhost:8080/reservations/howManyReserved/${id}`)\n            .then(response => response.json())\n            .then(data => setNumberOfReservedSeats(data))\n            .catch(error => console.error(error));\n\n        fetchOccupancyMatrix();\n    }, [id]);\n\n    const fetchOccupancyMatrix = async () => {\n        const response = await fetch('http://localhost:8080/recommendation/occupancy', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({}), // No need to send any specific data for occupancy fetch\n        });\n        if (response.ok) {\n            const matrix = await response.json();\n            setOccupancyMatrix(matrix);\n        }\n    };\n\n    const formatScreeningTime = timestamp => {\n        return moment(timestamp).format('dddd HH:mm, MMM Do YYYY');\n    };\n\n    if (!screeningInfo || numberOfReservedSeats === null) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className={styles.screeningInfoBody}>\n            <div className={styles.movieContainer}>\n                <div className={styles.basicInformation}>\n                    <h1 className={styles.movieTitle}> {screeningInfo.movie.movieName} </h1>\n                    <h2 className={styles.dateTitle}>{formatScreeningTime(screeningInfo.screening.startTime)}</h2>\n                    <h3 className={styles.roomTitle}> {screeningInfo.room.room_name} </h3>\n                </div>\n                <div className={styles.movieDetails}>\n                    <div className={styles.moviePoster}>\n                        <img src={screeningInfo.movie.picUrl}/>\n                    </div>\n                </div>\n            </div>\n            <SeatingArea occupiedSeatsCount={numberOfReservedSeats} totalSeats={totalSeats}\n                         screeningInfo={screeningInfo}/>\n        </div>\n    );\n}\n\nfunction SeatingArea({occupiedSeatsCount, totalSeats, screeningInfo}) {\n    const [seats, setSeats] = useState([]);\n    const [selectedSeats, setSelectedSeats] = useState(new Set());\n    const [selectedVipSeats, setSelectedVipSeats] = useState(new Set());\n\n    useEffect(() => {\n        let newSeats = Array(totalSeats).fill(false);\n        let occupiedIndices = new Set();\n        while (occupiedIndices.size < occupiedSeatsCount) {\n            let randomIndex = Math.floor(Math.random() * totalSeats);\n            if (!occupiedIndices.has(randomIndex)) {\n                occupiedIndices.add(randomIndex);\n                newSeats[randomIndex] = true;\n            }\n        }\n        setSeats(newSeats);\n    }, [occupiedSeatsCount, totalSeats]);\n\n    const handleSelectSeat = (seatNumber, isVip) => {\n        if (isVip) {\n            setSelectedVipSeats(prev => new Set(prev.has(seatNumber) ? [...prev].filter(x => x !== seatNumber) : [...prev, seatNumber]));\n        } else {\n            setSelectedSeats(prev => new Set(prev.has(seatNumber) ? [...prev].filter(x => x !== seatNumber) : [...prev, seatNumber]));\n        }\n    };\n\n    const rows = 10;\n    const cols = 10;\n\n    const handleIncrement = (isVip) => {\n        // Find the first available seat that is not occupied and not selected\n        for (let i = 0; i < seats.length; i++) {\n            const seatIsVip = i >= (rows - 1) * cols; // Assumes last row is VIP\n            if (!seats[i] && seatIsVip === isVip && !(selectedSeats.has(i) || selectedVipSeats.has(i))) {\n                if (isVip) {\n                    setSelectedVipSeats(new Set(selectedVipSeats).add(i));\n                } else {\n                    setSelectedSeats(new Set(selectedSeats).add(i));\n                }\n                break;\n            }\n        }\n    };\n\n    const handleDecrement = (isVip) => {\n        // Deselect the last selected seat of the appropriate type\n        if (isVip) {\n            if (selectedVipSeats.size > 0) {\n                const updatedVipSeats = new Set(selectedVipSeats);\n                const lastSelected = Array.from(updatedVipSeats).pop(); // Get the last element\n                updatedVipSeats.delete(lastSelected);\n                setSelectedVipSeats(updatedVipSeats);\n            }\n        } else {\n            if (selectedSeats.size > 0) {\n                const updatedSeats = new Set(selectedSeats);\n                const lastSelected = Array.from(updatedSeats).pop(); // Get the last element\n                updatedSeats.delete(lastSelected);\n                setSelectedSeats(updatedSeats);\n            }\n        }\n    };\n\n    return (\n        <div className={styles.seatingContainer}>\n            <div className={styles.ticketSelectionArea}>\n                <TicketCounter title=\"Basic seat\" price={screeningInfo.room.basicSeatPrice}\n                               selectedSeats={selectedSeats.size}\n                               onIncrement={() => handleIncrement(false)}\n                               onDecrement={() => handleDecrement(false)}/>\n                <TicketCounter title=\"VIP seat\" price={screeningInfo.room.vipSeatPrice}\n                               selectedSeats={selectedVipSeats.size}\n                               onIncrement={() => handleIncrement(true)}\n                               onDecrement={() => handleDecrement(true)}/>\n            </div>\n            <div className={styles.seatingInformation}>\n                <h1 className={styles.seatingTitle}><b> Available\n                    seats: </b> {totalSeats - occupiedSeatsCount} / {totalSeats}</h1>\n            </div>\n            <div className={styles.seatingArea}>\n                {Array.from({length: rows}, (_, rowIndex) => (\n                    <div key={rowIndex} className={styles.row}>\n                        {Array.from({length: cols}, (_, colIndex) => {\n                            // Compute isOccupied here for each seat\n                            const isOccupied = occupancyMatrix.length > 0\n                                && occupancyMatrix[rowIndex]\n                                && occupancyMatrix[rowIndex][colIndex] === 1;\n\n                            // Determine if the seat is selected\n                            const seatId = rowIndex * cols + colIndex;\n                            const isSelected = selectedSeats.has(seatId) || selectedVipSeats.has(seatId);\n\n                            return (\n                                <Seat\n                                    key={seatId}\n                                    isOccupied={isOccupied}\n                                    isVip={rowIndex === rows - 1} // Assuming last row is VIP as per your logic\n                                    seatNumber={colIndex + 1}\n                                    onSelect={() => handleSelectSeat(seatId, rowIndex === rows - 1)}\n                                    isSelected={isSelected}\n                                />\n                            );\n                        })}\n                        <div className={styles.rowNumber}>{rowIndex + 1}</div>\n                    </div>\n                ))}\n            </div>\n            <div className={styles.screen}>Screen</div>\n            <button className={styles.confirmTicketsButton}>Confirm tickets</button>\n        </div>\n    );\n}\n\nexport default ScreeningInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}