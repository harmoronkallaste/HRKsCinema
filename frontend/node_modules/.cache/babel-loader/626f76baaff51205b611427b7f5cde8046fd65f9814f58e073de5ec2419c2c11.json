{"ast":null,"code":"class MovieScreenings {\n  constructor(movieId) {\n    this.movieId = movieId;\n  }\n  async fetchData() {\n    try {\n      const response = await fetch(`https://localhost:8080/screenings/movies/${this.movieId}`);\n      if (response.ok) {\n        console.log('Data fetch successful');\n      } else {\n        console.error('Failed to fetch data');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n}\n\n// Example usage\nconst movieScreenings = new MovieScreenings(123); // Replace 123 with the actual movie ID\nmovieScreenings.fetchData();","map":{"version":3,"names":["MovieScreenings","constructor","movieId","fetchData","response","fetch","ok","console","log","error","movieScreenings"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/MovieScreenings.js"],"sourcesContent":["class MovieScreenings {\n    constructor(movieId) {\n        this.movieId = movieId;\n    }\n\n    async fetchData() {\n        try {\n            const response = await fetch(`https://localhost:8080/screenings/movies/${this.movieId}`);\n            if (response.ok) {\n                console.log('Data fetch successful');\n            } else {\n                console.error('Failed to fetch data');\n            }\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n}\n\n// Example usage\nconst movieScreenings = new MovieScreenings(123); // Replace 123 with the actual movie ID\nmovieScreenings.fetchData();\n"],"mappings":"AAAA,MAAMA,eAAe,CAAC;EAClBC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EAEA,MAAMC,SAASA,CAAA,EAAG;IACd,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2C,IAAI,CAACH,OAAQ,EAAC,CAAC;MACxF,IAAIE,QAAQ,CAACE,EAAE,EAAE;QACbC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACxC,CAAC,MAAM;QACHD,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAC;MACzC;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ;AACJ;;AAEA;AACA,MAAMC,eAAe,GAAG,IAAIV,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;AAClDU,eAAe,CAACP,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}