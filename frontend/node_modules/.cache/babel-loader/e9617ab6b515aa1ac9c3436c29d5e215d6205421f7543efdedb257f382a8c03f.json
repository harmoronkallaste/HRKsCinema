{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/ScreeningInfoComponent.js\",\n  _s = $RefreshSig$();\n// ScreeningInfoComponent.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScreeningInfoComponent = () => {\n  _s();\n  const [screeningInfo, setScreeningInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchScreeningInfo = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/screenings/idsearch/1'); // Replace 1 with the actual screening ID\n        setScreeningInfo(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching screening info:', error);\n        setLoading(false);\n      }\n    };\n    fetchScreeningInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Screening Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), screeningInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Movie ID: \", screeningInfo.movieId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Room ID: \", screeningInfo.roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(ScreeningInfoComponent, \"gJj2L+lesmChHoDd2qDLbTxrwuM=\");\n_c = ScreeningInfoComponent;\nexport default ScreeningInfoComponent;\nvar _c;\n$RefreshReg$(_c, \"ScreeningInfoComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ScreeningInfoComponent","_s","screeningInfo","setScreeningInfo","loading","setLoading","fetchScreeningInfo","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","movieId","roomId","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/ScreeningInfoComponent.js"],"sourcesContent":["// ScreeningInfoComponent.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ScreeningInfoComponent = () => {\n    const [screeningInfo, setScreeningInfo] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchScreeningInfo = async () => {\n            try {\n                const response = await axios.get('http://localhost:8080/screenings/idsearch/1'); // Replace 1 with the actual screening ID\n                setScreeningInfo(response.data);\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching screening info:', error);\n                setLoading(false);\n            }\n        };\n\n        fetchScreeningInfo();\n    }, []);\n\n    return (\n        <div>\n            {loading ? (\n                <p>Loading...</p>\n            ) : (\n                <div>\n                    <h2>Screening Information</h2>\n                    {screeningInfo && (\n                        <div>\n                            <p>Movie ID: {screeningInfo.movieId}</p>\n                            <p>Room ID: {screeningInfo.roomId}</p>\n                            {/* Render other screening information as needed */}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ScreeningInfoComponent;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,6CAA6C,CAAC,CAAC,CAAC;QACjFL,gBAAgB,CAACI,QAAQ,CAACE,IAAI,CAAC;QAC/BJ,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDL,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAa,QAAA,EACKR,OAAO,gBACJL,OAAA;MAAAa,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBjB,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7Bd,aAAa,iBACVH,OAAA;QAAAa,QAAA,gBACIb,OAAA;UAAAa,QAAA,GAAG,YAAU,EAACV,aAAa,CAACe,OAAO;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCjB,OAAA;UAAAa,QAAA,GAAG,WAAS,EAACV,aAAa,CAACgB,MAAM;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErC,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CArCID,sBAAsB;AAAAmB,EAAA,GAAtBnB,sBAAsB;AAuC5B,eAAeA,sBAAsB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}