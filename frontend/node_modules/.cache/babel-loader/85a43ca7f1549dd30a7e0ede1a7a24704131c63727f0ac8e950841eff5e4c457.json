{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/MovieScreenings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieScreenings() {\n  _s();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Define the movie ID you want to fetch data for\n    const movieId = 1; // Change this to the desired movie ID\n\n    fetch(`http://localhost:8080/screenings/movie/${movieId}`).then(response => response.json()).then(data => {\n      setMovieInfo(data);\n      setLoading(false);\n    }).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-screenings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Screeningss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : movieInfo && movieInfo.movie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: movieInfo.movie.movieName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of Screenings: \", movieInfo.screenings.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieScreenings, \"V+WX3jBHYodhWzjhXTNFMz3n1jo=\");\n_c = MovieScreenings;\nexport default MovieScreenings;\nvar _c;\n$RefreshReg$(_c, \"MovieScreenings\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MovieScreenings","_s","movieInfo","setMovieInfo","loading","setLoading","movieId","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","movie","movieName","screenings","length","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/MovieScreenings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MovieScreenings() {\n    const [movieInfo, setMovieInfo] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // Define the movie ID you want to fetch data for\n        const movieId = 1; // Change this to the desired movie ID\n\n        fetch(`http://localhost:8080/screenings/movie/${movieId}`)\n            .then(response => response.json())\n            .then(data => {\n                setMovieInfo(data);\n                setLoading(false);\n            })\n            .catch(error => console.error(error));\n    }, []);\n\n    return (\n        <div className=\"movie-screenings\">\n            <h1>Movie Screeningss</h1>\n            {loading ? (\n                <p>Loading...</p>\n            ) : (\n                movieInfo && movieInfo.movie && (\n                    <div className=\"movie-info\">\n                        <h2>{movieInfo.movie.movieName}</h2>\n                        <p>Number of Screenings: {movieInfo.screenings.length}</p>\n                    </div>\n                )\n            )}\n        </div>\n    );\n}\n\nexport default MovieScreenings;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,OAAO,GAAG,CAAC,CAAC,CAAC;;IAEnBC,KAAK,CAAE,0CAAyCD,OAAQ,EAAC,CAAC,CACrDE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVR,YAAY,CAACQ,IAAI,CAAC;MAClBN,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAAiB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBhB,OAAO,gBACJL,OAAA;MAAAiB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEjBlB,SAAS,IAAIA,SAAS,CAACmB,KAAK,iBACxBtB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBjB,OAAA;QAAAiB,QAAA,EAAKd,SAAS,CAACmB,KAAK,CAACC;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpCrB,OAAA;QAAAiB,QAAA,GAAG,wBAAsB,EAACd,SAAS,CAACqB,UAAU,CAACC,MAAM;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAEZ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACnB,EAAA,CAhCQD,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAkCxB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}