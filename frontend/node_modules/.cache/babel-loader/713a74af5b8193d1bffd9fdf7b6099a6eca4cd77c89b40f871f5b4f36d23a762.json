{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/ScreeningInfo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './ScreeningInfo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Seat({\n  isOccupied,\n  onHover\n}) {\n  const seatClasses = isOccupied ? `${styles.seat} ${styles.occupied}` : styles.seat;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: seatClasses,\n    onMouseEnter: isOccupied ? null : onHover,\n    onMouseLeave: isOccupied ? null : onHover,\n    onClick: isOccupied ? null : () => console.log('Seat selected'),\n    tabIndex: \"0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = Seat;\nfunction SeatingArea({\n  occupiedSeatsCount,\n  totalSeats\n}) {\n  _s();\n  const [seats, setSeats] = useState(Array(totalSeats).fill(false));\n  useEffect(() => {\n    // Randomly occupy seats\n    let occupiedIndices = new Set();\n    while (occupiedIndices.size < occupiedSeatsCount) {\n      let randomIndex = Math.floor(Math.random() * totalSeats);\n      occupiedIndices.add(randomIndex);\n    }\n    setSeats(seats.map((seat, index) => occupiedIndices.has(index)));\n  }, [occupiedSeatsCount, totalSeats]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.seatingArea,\n    children: seats.map((isOccupied, index) => /*#__PURE__*/_jsxDEV(Seat, {\n      isOccupied: isOccupied\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(SeatingArea, \"CH76wWfz/jdP+Zi4vE/AGzFTnHA=\");\n_c2 = SeatingArea;\nfunction ScreeningInfo() {\n  _s2();\n  const [screeningInfo, setScreeningInfo] = useState(null);\n  const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n  const {\n    id\n  } = useParams();\n  const totalSeats = 100; // Total number of seats for simplicity\n\n  useEffect(() => {\n    // Fetch the screening info\n    fetch(`http://localhost:8080/screenings/info/${id}`).then(response => response.json()).then(data => setScreeningInfo(data)).catch(error => console.error(error));\n\n    // Fetch the number of reserved seats\n    fetch(`http://localhost:8080/reservations/howManyReserved/${id}`).then(response => response.json()).then(data => setNumberOfReservedSeats(data)).catch(error => console.error(error));\n  }, [id]);\n  if (!screeningInfo || numberOfReservedSeats === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.screeningInfoBody,\n    children: /*#__PURE__*/_jsxDEV(SeatingArea, {\n      occupiedSeatsCount: numberOfReservedSeats,\n      totalSeats: totalSeats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s2(ScreeningInfo, \"JiCji2Pw5fJMT9qEupqf6xL5m0k=\", false, function () {\n  return [useParams];\n});\n_c3 = ScreeningInfo;\nexport default ScreeningInfo;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Seat\");\n$RefreshReg$(_c2, \"SeatingArea\");\n$RefreshReg$(_c3, \"ScreeningInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","styles","jsxDEV","_jsxDEV","Seat","isOccupied","onHover","seatClasses","seat","occupied","className","onMouseEnter","onMouseLeave","onClick","console","log","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","SeatingArea","occupiedSeatsCount","totalSeats","_s","seats","setSeats","Array","fill","occupiedIndices","Set","size","randomIndex","Math","floor","random","add","map","index","has","seatingArea","children","_c2","ScreeningInfo","_s2","screeningInfo","setScreeningInfo","numberOfReservedSeats","setNumberOfReservedSeats","id","fetch","then","response","json","data","catch","error","screeningInfoBody","_c3","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/ScreeningInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './ScreeningInfo.module.css';\n\nfunction Seat({ isOccupied, onHover }) {\n    const seatClasses = isOccupied\n        ? `${styles.seat} ${styles.occupied}`\n        : styles.seat;\n\n    return (\n        <div\n            className={seatClasses}\n            onMouseEnter={isOccupied ? null : onHover}\n            onMouseLeave={isOccupied ? null : onHover}\n            onClick={isOccupied ? null : () => console.log('Seat selected')}\n            tabIndex=\"0\"\n        />\n    );\n}\n\nfunction SeatingArea({ occupiedSeatsCount, totalSeats }) {\n    const [seats, setSeats] = useState(Array(totalSeats).fill(false));\n\n    useEffect(() => {\n        // Randomly occupy seats\n        let occupiedIndices = new Set();\n        while (occupiedIndices.size < occupiedSeatsCount) {\n            let randomIndex = Math.floor(Math.random() * totalSeats);\n            occupiedIndices.add(randomIndex);\n        }\n        setSeats(seats.map((seat, index) => occupiedIndices.has(index)));\n    }, [occupiedSeatsCount, totalSeats]);\n\n    return (\n        <div className={styles.seatingArea}>\n            {seats.map((isOccupied, index) => (\n                <Seat key={index} isOccupied={isOccupied} />\n            ))}\n        </div>\n    );\n}\n\nfunction ScreeningInfo() {\n    const [screeningInfo, setScreeningInfo] = useState(null);\n    const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n    const { id } = useParams();\n    const totalSeats = 100; // Total number of seats for simplicity\n\n    useEffect(() => {\n        // Fetch the screening info\n        fetch(`http://localhost:8080/screenings/info/${id}`)\n            .then(response => response.json())\n            .then(data => setScreeningInfo(data))\n            .catch(error => console.error(error));\n\n        // Fetch the number of reserved seats\n        fetch(`http://localhost:8080/reservations/howManyReserved/${id}`)\n            .then(response => response.json())\n            .then(data => setNumberOfReservedSeats(data))\n            .catch(error => console.error(error));\n    }, [id]);\n\n    if (!screeningInfo || numberOfReservedSeats === null) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className={styles.screeningInfoBody}>\n            {/* ...movie information display */}\n            <SeatingArea occupiedSeatsCount={numberOfReservedSeats} totalSeats={totalSeats} />\n            {/* ...other components */}\n        </div>\n    );\n}\n\nexport default ScreeningInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}