{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/AllScreenings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../style/AllScreenings.module.css';\nimport moment from 'moment';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllScreenings() {\n  _s();\n  const [allScreenings, setAllScreenings] = useState([]);\n  const [screenings, setScreenings] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(moment().format('ddd')); // Default to current day of week\n  const {\n    id\n  } = useParams();\n  const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8080/screenings/allScreenings').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(screeningsData => {\n      // First make sure we received an array\n      if (!Array.isArray(screeningsData)) {\n        throw new Error('Data is not an array!');\n      }\n\n      // Now for each screening, fetch the number of reserved seats\n      return Promise.all(screeningsData.map(screening => {\n        return fetch(`http://localhost:8080/reservations/howManyReserved/${screening.screening.id}`).then(res => res.json()).then(reservedSeats => {\n          return {\n            ...screening,\n            availableSeats: screening.room.totalSeats - reservedSeats\n          };\n        }).catch(error => {\n          console.error('Error fetching reserved seats:', error);\n          return {\n            ...screening,\n            availableSeats: 'N/A' // Or any error handling\n          };\n        });\n      }));\n    }).then(allScreeningsWithSeats => {\n      setAllScreenings(allScreeningsWithSeats);\n      filterScreeningsByDay(selectedDay, allScreeningsWithSeats);\n    }).catch(error => {\n      console.error('Error fetching screenings:', error);\n    });\n  }, [selectedDay]);\n  const filterScreeningsByDay = (day, screeningsData = allScreenings) => {\n    const filtered = screeningsData.filter(screening => moment(screening.screening.startTime).format('ddd') === day);\n    setScreenings(filtered);\n  };\n  const handleDayButtonClick = day => {\n    setSelectedDay(day);\n    filterScreeningsByDay(day);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.allScreenings,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.menuBar,\n      children: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.dayButton} ${selectedDay === day ? styles.active : ''}`,\n        onClick: () => handleDayButtonClick(day),\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.screeningsList,\n      children: screenings.map(screening => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.screeningContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.moviePoster,\n          style: {\n            backgroundImage: `url(${screening.movie.picUrl})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.movieInfoAndButtons,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.movieInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: screening.movie.movieName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", moment(screening.screening.startTime).format('LLL'), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Rating: \", screening.movie.rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Room: \", screening.room.room_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Available Seats: \", screening.room.totalSeats - numberOfReservedSeats, \" / \", screening.room.totalSeats]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.buttonGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.screeningButton,\n              children: \"Get tickets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.screeningButton,\n              children: \"View movie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.screeningButton,\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, screening.screening.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(AllScreenings, \"eiQfLTy7wBus8rpvXaXAJTIq2xU=\", false, function () {\n  return [useParams];\n});\n_c = AllScreenings;\nexport default AllScreenings;\nvar _c;\n$RefreshReg$(_c, \"AllScreenings\");","map":{"version":3,"names":["React","useState","useEffect","styles","moment","useParams","jsxDEV","_jsxDEV","AllScreenings","_s","allScreenings","setAllScreenings","screenings","setScreenings","selectedDay","setSelectedDay","format","id","numberOfReservedSeats","setNumberOfReservedSeats","fetch","then","response","ok","Error","status","json","screeningsData","Array","isArray","Promise","all","map","screening","res","reservedSeats","availableSeats","room","totalSeats","catch","error","console","allScreeningsWithSeats","filterScreeningsByDay","day","filtered","filter","startTime","handleDayButtonClick","className","children","menuBar","dayButton","active","onClick","fileName","_jsxFileName","lineNumber","columnNumber","screeningsList","screeningContainer","moviePoster","style","backgroundImage","movie","picUrl","movieInfoAndButtons","movieInfo","movieName","rating","room_name","buttonGroup","screeningButton","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/AllScreenings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from '../style/AllScreenings.module.css';\nimport moment from 'moment';\nimport {useParams} from \"react-router-dom\";\n\nfunction AllScreenings() {\n    const [allScreenings, setAllScreenings] = useState([]);\n    const [screenings, setScreenings] = useState([]);\n    const [selectedDay, setSelectedDay] = useState(moment().format('ddd')); // Default to current day of week\n    const {id} = useParams();\n    const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n\n    useEffect(() => {\n        fetch('http://localhost:8080/screenings/allScreenings')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(screeningsData => {\n                // First make sure we received an array\n                if (!Array.isArray(screeningsData)) {\n                    throw new Error('Data is not an array!');\n                }\n\n                // Now for each screening, fetch the number of reserved seats\n                return Promise.all(screeningsData.map(screening => {\n                    return fetch(`http://localhost:8080/reservations/howManyReserved/${screening.screening.id}`)\n                        .then(res => res.json())\n                        .then(reservedSeats => {\n                            return {\n                                ...screening,\n                                availableSeats: screening.room.totalSeats - reservedSeats\n                            };\n                        })\n                        .catch(error => {\n                            console.error('Error fetching reserved seats:', error);\n                            return {\n                                ...screening,\n                                availableSeats: 'N/A' // Or any error handling\n                            };\n                        });\n                }));\n            })\n            .then(allScreeningsWithSeats => {\n                setAllScreenings(allScreeningsWithSeats);\n                filterScreeningsByDay(selectedDay, allScreeningsWithSeats);\n            })\n            .catch(error => {\n                console.error('Error fetching screenings:', error);\n            });\n    }, [selectedDay]);\n\n    const filterScreeningsByDay = (day, screeningsData = allScreenings) => {\n        const filtered = screeningsData.filter((screening) =>\n            moment(screening.screening.startTime).format('ddd') === day\n        );\n        setScreenings(filtered);\n    };\n\n    const handleDayButtonClick = (day) => {\n        setSelectedDay(day);\n        filterScreeningsByDay(day);\n    };\n\n    return (\n        <div className={styles.allScreenings}>\n            <div className={styles.menuBar}>\n                {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day) => (\n                    <button\n                        key={day}\n                        className={`${styles.dayButton} ${selectedDay === day ? styles.active : ''}`}\n                        onClick={() => handleDayButtonClick(day)}\n                    >\n                        {day}\n                    </button>\n                ))}\n            </div>\n            <div className={styles.screeningsList}>\n                {screenings.map((screening) => (\n                    <div key={screening.screening.id} className={styles.screeningContainer}>\n                        <div className={styles.moviePoster} style={{backgroundImage: `url(${screening.movie.picUrl})`}}>\n                            {/* Image will be displayed via background */}\n                        </div>\n                        <div className={styles.movieInfoAndButtons}>\n                            <div className={styles.movieInfo}>\n                                <h2>{screening.movie.movieName}</h2>\n                                <h3> {moment(screening.screening.startTime).format('LLL')} </h3>\n                                <p>Rating: {screening.movie.rating}</p>\n                                <p>Room: {screening.room.room_name}</p>\n                                <p>Available Seats: {screening.room.totalSeats - numberOfReservedSeats} / {screening.room.totalSeats}</p>\n                            </div>\n                            <div className={styles.buttonGroup}>\n                                <button className={styles.screeningButton}>Get tickets</button>\n                                <button className={styles.screeningButton}>View movie</button>\n                                <button className={styles.screeningButton}>Schedule</button>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n        </div>\n    );\n}\n\nexport default AllScreenings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}