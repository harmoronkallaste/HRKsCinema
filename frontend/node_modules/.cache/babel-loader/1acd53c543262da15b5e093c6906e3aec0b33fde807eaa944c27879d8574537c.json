{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/ScreeningInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment/moment'; // Import moment.js library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScreeningInfo() {\n  _s();\n  const [screeningInfo, setScreeningInfo] = useState(null);\n  const {\n    id\n  } = useParams(); // Accessing path parameters using useParams\n\n  useEffect(() => {\n    fetch(`http://localhost:8080/screenings/info/${id}`).then(response => response.json()).then(data => {\n      setScreeningInfo(data);\n    }).catch(error => console.error(error));\n  }, [id]);\n  const formatScreeningTime = timestampInMilliseconds => {\n    const dateObject = new Date(timestampInMilliseconds);\n    return moment(dateObject).format('dddd, HH:mm'); // Use moment.js for formatting\n  };\n  if (!screeningInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screening-info-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Screening Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Movie Title: \", screeningInfo.movie.movieName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", screeningInfo.movie.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Release Year: \", screeningInfo.movie.releaseYear]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Runtime: \", screeningInfo.movie.runTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Screening Time: \", formatScreeningTime(screeningInfo.screening.startTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Room: \", screeningInfo.room.room_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(ScreeningInfo, \"lbQIqFB7W4cx4L2Gju31sFbFYxw=\", false, function () {\n  return [useParams];\n});\n_c = ScreeningInfo;\nexport default ScreeningInfo;\nvar _c;\n$RefreshReg$(_c, \"ScreeningInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","moment","jsxDEV","_jsxDEV","ScreeningInfo","_s","screeningInfo","setScreeningInfo","id","fetch","then","response","json","data","catch","error","console","formatScreeningTime","timestampInMilliseconds","dateObject","Date","format","children","fileName","_jsxFileName","lineNumber","columnNumber","className","movie","movieName","rating","releaseYear","runTime","screening","startTime","room","room_name","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/ScreeningInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment/moment'; // Import moment.js library\n\nfunction ScreeningInfo() {\n    const [screeningInfo, setScreeningInfo] = useState(null);\n    const { id } = useParams(); // Accessing path parameters using useParams\n\n    useEffect(() => {\n        fetch(`http://localhost:8080/screenings/info/${id}`)\n            .then(response => response.json())\n            .then(data => {\n                setScreeningInfo(data);\n            })\n            .catch(error => console.error(error));\n    }, [id]);\n\n    const formatScreeningTime = (timestampInMilliseconds) => {\n        const dateObject = new Date(timestampInMilliseconds);\n        return moment(dateObject).format('dddd, HH:mm'); // Use moment.js for formatting\n    };\n\n    if (!screeningInfo) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"screening-info-container\">\n            <h2>Screening Information</h2>\n            <p>Movie Title: {screeningInfo.movie.movieName}</p>\n            <p>Rating: {screeningInfo.movie.rating}</p>\n            <p>Release Year: {screeningInfo.movie.releaseYear}</p>\n            <p>Runtime: {screeningInfo.movie.runTime}</p>\n            <p>Screening Time: {formatScreeningTime(screeningInfo.screening.startTime)}</p>\n            <p>Room: {screeningInfo.room.room_name}</p>\n            \n        </div>\n    );\n}\n\nexport default ScreeningInfo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM;IAAEU;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5BD,SAAS,CAAC,MAAM;IACZU,KAAK,CAAE,yCAAwCD,EAAG,EAAC,CAAC,CAC/CE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVN,gBAAgB,CAACM,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,MAAMS,mBAAmB,GAAIC,uBAAuB,IAAK;IACrD,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAACF,uBAAuB,CAAC;IACpD,OAAOjB,MAAM,CAACkB,UAAU,CAAC,CAACE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,IAAI,CAACf,aAAa,EAAE;IAChB,oBAAOH,OAAA;MAAAmB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIvB,OAAA;IAAKwB,SAAS,EAAC,0BAA0B;IAAAL,QAAA,gBACrCnB,OAAA;MAAAmB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BvB,OAAA;MAAAmB,QAAA,GAAG,eAAa,EAAChB,aAAa,CAACsB,KAAK,CAACC,SAAS;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDvB,OAAA;MAAAmB,QAAA,GAAG,UAAQ,EAAChB,aAAa,CAACsB,KAAK,CAACE,MAAM;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CvB,OAAA;MAAAmB,QAAA,GAAG,gBAAc,EAAChB,aAAa,CAACsB,KAAK,CAACG,WAAW;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDvB,OAAA;MAAAmB,QAAA,GAAG,WAAS,EAAChB,aAAa,CAACsB,KAAK,CAACI,OAAO;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CvB,OAAA;MAAAmB,QAAA,GAAG,kBAAgB,EAACL,mBAAmB,CAACX,aAAa,CAAC2B,SAAS,CAACC,SAAS,CAAC;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/EvB,OAAA;MAAAmB,QAAA,GAAG,QAAM,EAAChB,aAAa,CAAC6B,IAAI,CAACC,SAAS;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1C,CAAC;AAEd;AAACrB,EAAA,CAlCQD,aAAa;EAAA,QAEHJ,SAAS;AAAA;AAAAqC,EAAA,GAFnBjC,aAAa;AAoCtB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}