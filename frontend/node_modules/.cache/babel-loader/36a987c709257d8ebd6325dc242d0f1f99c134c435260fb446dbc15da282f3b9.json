{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/ScreeningInfo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// ScreeningInfo.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './ScreeningInfo.module.css';\n\n// Define Seat component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Seat({\n  isOccupied,\n  onHover,\n  seatNumber\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.seat} ${isOccupied ? styles.occupied : ''}`,\n    onMouseEnter: () => onHover(seatNumber, true),\n    onMouseLeave: () => onHover(seatNumber, false),\n    tabIndex: \"0\" // Make it keyboard accessible\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n// Define SeatingArea component\n_c = Seat;\nfunction SeatingArea({\n  occupiedSeats\n}) {\n  _s();\n  // Initialize a state to track hovered seat\n  const [hoveredSeat, setHoveredSeat] = useState(null);\n\n  // Handle the hover state\n  const handleHover = (seatNumber, isHovered) => {\n    setHoveredSeat(isHovered ? seatNumber : null);\n  };\n\n  // Generate seats in a 10x10 grid\n  const rows = 10;\n  const cols = 10;\n  let seats = [];\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col < cols; col++) {\n      const seatNumber = row * cols + col;\n      const isOccupied = occupiedSeats.includes(seatNumber);\n      seats.push( /*#__PURE__*/_jsxDEV(Seat, {\n        seatNumber: seatNumber,\n        isOccupied: isOccupied,\n        onHover: handleHover\n      }, seatNumber, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.seatingArea,\n    children: [seats, hoveredSeat !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Seat \", hoveredSeat, \" is hovered\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(SeatingArea, \"ilVf/tzUNxvdWcKTvDg9SWYdqns=\");\n_c2 = SeatingArea;\nfunction ScreeningInfo() {\n  _s2();\n  const [screeningInfo, setScreeningInfo] = useState(null);\n  const {\n    id\n  } = useParams(); // Accessing path parameters using useParams\n\n  useEffect(() => {\n    fetch(`http://localhost:8080/screenings/info/${id}`).then(response => response.json()).then(data => {\n      setScreeningInfo(data);\n    }).catch(error => console.error(error));\n  }, [id]);\n  if (!screeningInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Extract occupied seats from screeningInfo\n  const occupiedSeats = screeningInfo.room.occupiedSeats;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.screeningInfoBody,\n    children: /*#__PURE__*/_jsxDEV(SeatingArea, {\n      occupiedSeats: occupiedSeats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s2(ScreeningInfo, \"lbQIqFB7W4cx4L2Gju31sFbFYxw=\", false, function () {\n  return [useParams];\n});\n_c3 = ScreeningInfo;\nexport default ScreeningInfo;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Seat\");\n$RefreshReg$(_c2, \"SeatingArea\");\n$RefreshReg$(_c3, \"ScreeningInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","styles","jsxDEV","_jsxDEV","Seat","isOccupied","onHover","seatNumber","className","seat","occupied","onMouseEnter","onMouseLeave","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","SeatingArea","occupiedSeats","_s","hoveredSeat","setHoveredSeat","handleHover","isHovered","rows","cols","seats","row","col","includes","push","seatingArea","children","_c2","ScreeningInfo","_s2","screeningInfo","setScreeningInfo","id","fetch","then","response","json","data","catch","error","console","room","screeningInfoBody","_c3","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/ScreeningInfo.js"],"sourcesContent":["// ScreeningInfo.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './ScreeningInfo.module.css';\n\n// Define Seat component\nfunction Seat({ isOccupied, onHover, seatNumber }) {\n    return (\n        <div\n            className={`${styles.seat} ${isOccupied ? styles.occupied : ''}`}\n            onMouseEnter={() => onHover(seatNumber, true)}\n            onMouseLeave={() => onHover(seatNumber, false)}\n            tabIndex=\"0\" // Make it keyboard accessible\n        />\n    );\n}\n\n// Define SeatingArea component\nfunction SeatingArea({ occupiedSeats }) {\n    // Initialize a state to track hovered seat\n    const [hoveredSeat, setHoveredSeat] = useState(null);\n\n    // Handle the hover state\n    const handleHover = (seatNumber, isHovered) => {\n        setHoveredSeat(isHovered ? seatNumber : null);\n    };\n\n    // Generate seats in a 10x10 grid\n    const rows = 10;\n    const cols = 10;\n    let seats = [];\n    for (let row = 0; row < rows; row++) {\n        for (let col = 0; col < cols; col++) {\n            const seatNumber = row * cols + col;\n            const isOccupied = occupiedSeats.includes(seatNumber);\n            seats.push(\n                <Seat\n                    key={seatNumber}\n                    seatNumber={seatNumber}\n                    isOccupied={isOccupied}\n                    onHover={handleHover}\n                />\n            );\n        }\n    }\n\n    return (\n        <div className={styles.seatingArea}>\n            {seats}\n            {hoveredSeat !== null && <div>Seat {hoveredSeat} is hovered</div>}\n        </div>\n    );\n}\n\nfunction ScreeningInfo() {\n    const [screeningInfo, setScreeningInfo] = useState(null);\n    const { id } = useParams(); // Accessing path parameters using useParams\n\n    useEffect(() => {\n        fetch(`http://localhost:8080/screenings/info/${id}`)\n            .then((response) => response.json())\n            .then((data) => {\n                setScreeningInfo(data);\n            })\n            .catch((error) => console.error(error));\n    }, [id]);\n\n    if (!screeningInfo) {\n        return <div>Loading...</div>;\n    }\n\n    // Extract occupied seats from screeningInfo\n    const occupiedSeats = screeningInfo.room.occupiedSeats;\n\n    return (\n        <div className={styles.screeningInfoBody}>\n            {/* ...other components like movie info ... */}\n            <SeatingArea occupiedSeats={occupiedSeats} />\n        </div>\n    );\n}\n\nexport default ScreeningInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}