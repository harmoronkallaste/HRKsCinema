{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/AllScreenings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../style/AllScreenings.module.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllScreenings() {\n  _s();\n  const [screenings, setScreenings] = useState([]);\n  const [selectedDay, setSelectedDay] = useState('Mon'); // Default day\n\n  useEffect(() => {\n    fetch('http://localhost:8080/screenings/allScreenings').then(response => response.json()).then(data => {\n      // For each screening, get the count of reserved seats\n      const screeningsWithSeats = data.map(screening => {\n        return fetch(`http://localhost:8080/reservations/howManyReserved/${screening.screening.id}`).then(response => response.json()).then(reservedSeats => ({\n          ...screening,\n          reservedSeats: reservedSeats,\n          availableSeats: screening.room.totalSeats - reservedSeats\n        })).catch(error => console.error('Error fetching reserved seats:', error));\n      });\n      Promise.all(screeningsWithSeats).then(completed => {\n        setScreenings(completed);\n      });\n    }).catch(error => console.error('Error fetching screenings:', error));\n  }, []);\n  const filteredScreenings = screenings.filter(screening => moment(screening.screening.startTime).format('ddd') === selectedDay);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.screeningsList,\n    children: screenings.map(screening => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.screeningContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: screening.movie.movieName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", screening.movie.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Room: \", screening.room.room_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Start Time: \", moment(screening.screening.startTime).format('LLL')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Available Seats: \", screening.availableSeats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, screening.screening.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(AllScreenings, \"VyBd6jUGcP936KjIpQpilcxxR0g=\");\n_c = AllScreenings;\nexport default AllScreenings;\nvar _c;\n$RefreshReg$(_c, \"AllScreenings\");","map":{"version":3,"names":["React","useState","useEffect","styles","moment","jsxDEV","_jsxDEV","AllScreenings","_s","screenings","setScreenings","selectedDay","setSelectedDay","fetch","then","response","json","data","screeningsWithSeats","map","screening","id","reservedSeats","availableSeats","room","totalSeats","catch","error","console","Promise","all","completed","filteredScreenings","filter","startTime","format","className","screeningsList","children","screeningContainer","movie","movieName","fileName","_jsxFileName","lineNumber","columnNumber","rating","room_name","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/AllScreenings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from '../style/AllScreenings.module.css';\nimport moment from 'moment';\n\nfunction AllScreenings() {\n    const [screenings, setScreenings] = useState([]);\n    const [selectedDay, setSelectedDay] = useState('Mon'); // Default day\n\n    useEffect(() => {\n        fetch('http://localhost:8080/screenings/allScreenings')\n            .then(response => response.json())\n            .then(data => {\n                // For each screening, get the count of reserved seats\n                const screeningsWithSeats = data.map(screening => {\n                    return fetch(`http://localhost:8080/reservations/howManyReserved/${screening.screening.id}`)\n                        .then(response => response.json())\n                        .then(reservedSeats => ({\n                            ...screening,\n                            reservedSeats: reservedSeats,\n                            availableSeats: screening.room.totalSeats - reservedSeats\n                        }))\n                        .catch(error => console.error('Error fetching reserved seats:', error));\n                });\n\n                Promise.all(screeningsWithSeats).then(completed => {\n                    setScreenings(completed);\n                });\n            })\n            .catch(error => console.error('Error fetching screenings:', error));\n    }, []);\n\n    const filteredScreenings = screenings.filter((screening) =>\n        moment(screening.screening.startTime).format('ddd') === selectedDay\n    );\n\n    return (\n        \n        <div className={styles.screeningsList}>\n            {screenings.map((screening) => (\n                <div key={screening.screening.id} className={styles.screeningContainer}>\n                    <h2>{screening.movie.movieName}</h2>\n                    <p>Rating: {screening.movie.rating}</p>\n                    <p>Room: {screening.room.room_name}</p>\n                    <p>Start Time: {moment(screening.screening.startTime).format('LLL')}</p>\n                    <p>Available Seats: {screening.availableSeats}</p>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default AllScreenings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}