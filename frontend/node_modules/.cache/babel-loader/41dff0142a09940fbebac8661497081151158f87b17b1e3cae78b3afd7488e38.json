{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/GuestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GuestPage() {\n  _s();\n  const [screeningsData, setScreeningsData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8080/screenings/allScreenings').then(response => response.json()).then(data => {\n      // Group screenings by movie title (replace with your actual logic)\n      const groupedScreenings = data.reduce((acc, screening) => {\n        const movieTitle = screening.movie.movieName;\n        acc[movieTitle] = acc[movieTitle] || {\n          movie: screening.movie,\n          screenings: []\n        };\n        acc[movieTitle].screenings.push(screening);\n        return acc;\n      }, {});\n      setScreeningsData(groupedScreenings);\n    }).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guest-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome as Guest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Screenings:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), Object.entries(screeningsData).map(([movieTitle, movieData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movieData.movie.movieName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Genre: \", movieData.movie.genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release Year: \", movieData.movie.releaseYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Screening Times:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movieData.screenings.map(screening => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [screening.startTime, \" (\", screening.room.room_name, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this)\n        }, screening.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, movieTitle, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(GuestPage, \"PLkcQvv1OmjagRg6VNhorGJv3zY=\");\n_c = GuestPage;\nexport default GuestPage;\nvar _c;\n$RefreshReg$(_c, \"GuestPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GuestPage","_s","screeningsData","setScreeningsData","fetch","then","response","json","data","groupedScreenings","reduce","acc","screening","movieTitle","movie","movieName","screenings","push","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","movieData","genre","releaseYear","startTime","room","room_name","id","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/GuestPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction GuestPage() {\n    const [screeningsData, setScreeningsData] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:8080/screenings/allScreenings')\n            .then(response => response.json())\n            .then(data => {\n                // Group screenings by movie title (replace with your actual logic)\n                const groupedScreenings = data.reduce((acc, screening) => {\n                    const movieTitle = screening.movie.movieName;\n                    acc[movieTitle] = acc[movieTitle] || { movie: screening.movie, screenings: [] };\n                    acc[movieTitle].screenings.push(screening);\n                    return acc;\n                }, {});\n                setScreeningsData(groupedScreenings);\n            })\n            .catch(error => console.error(error));\n    }, []);\n\n    return (\n        <div className=\"guest-page\">\n            <h1>Welcome as Guest</h1>\n            <h2>Screenings:</h2>\n            {Object.entries(screeningsData).map(([movieTitle, movieData]) => (\n                <div key={movieTitle} className=\"movie-container\">\n                    <h3>{movieData.movie.movieName}</h3>\n                    <p>Genre: {movieData.movie.genre}</p>\n                    <p>Release Year: {movieData.movie.releaseYear}</p>\n                    {/* ... other movie details */}\n                    <h4>Screening Times:</h4>\n                    <ul>\n                        {movieData.screenings.map(screening => (\n                            <li key={screening.id}>\n                                <p>{screening.startTime} ({screening.room.room_name})</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default GuestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}