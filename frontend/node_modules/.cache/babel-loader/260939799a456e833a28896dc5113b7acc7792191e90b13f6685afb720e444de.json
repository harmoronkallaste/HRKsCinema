{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/GuestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Guest.css';\nimport moment from 'moment/moment'; // Import moment.js library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GuestPage() {\n  _s();\n  const [screeningsData, setScreeningsData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8080/screenings/allScreeningTimesByMovies').then(response => response.json()).then(data => {\n      const formattedData = Object.entries(data).map(([movie, screeningInfos]) => ({\n        movie,\n        allScreenings: screeningInfos\n      }));\n      setScreeningsData(formattedData);\n      console.log(formattedData); // Log the formatted data to the console\n    }).catch(error => console.error(error));\n  }, []);\n  const formatScreeningTime = timestampInMilliseconds => {\n    const dateObject = new Date(timestampInMilliseconds);\n    return moment(dateObject).format('dddd, HH:mm'); // Use moment.js for formatting\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guest-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome as Guest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screenings-container\",\n      children: screeningsData.map(movieInfo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movieInfo.movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screening-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Screening Times:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: movieInfo.allScreenings && movieInfo.allScreenings.length > 0 ? movieInfo.allScreenings.map(screening => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [formatScreeningTime(screening.screening.startTime), \" - Room: \", screening.room.room_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 45\n              }, this)\n            }, screening.screening.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No screenings available for this movie.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, movieInfo.movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(GuestPage, \"PLkcQvv1OmjagRg6VNhorGJv3zY=\");\n_c = GuestPage;\nexport default GuestPage;\nvar _c;\n$RefreshReg$(_c, \"GuestPage\");","map":{"version":3,"names":["React","useState","useEffect","moment","jsxDEV","_jsxDEV","GuestPage","_s","screeningsData","setScreeningsData","fetch","then","response","json","data","formattedData","Object","entries","map","movie","screeningInfos","allScreenings","console","log","catch","error","formatScreeningTime","timestampInMilliseconds","dateObject","Date","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","movieInfo","title","length","screening","startTime","room","room_name","id","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/GuestPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Guest.css';\nimport moment from 'moment/moment'; // Import moment.js library\n\nfunction GuestPage() {\n    const [screeningsData, setScreeningsData] = useState([]);\n\n\n    useEffect(() => {\n        fetch('http://localhost:8080/screenings/allScreeningTimesByMovies')\n            .then(response => response.json())\n            .then(data => {\n                const formattedData = Object.entries(data).map(([movie, screeningInfos]) => ({ movie, allScreenings: screeningInfos }));\n                setScreeningsData(formattedData);\n                console.log(formattedData); // Log the formatted data to the console\n            })\n            .catch(error => console.error(error));\n    }, []);\n\n\n\n    const formatScreeningTime = (timestampInMilliseconds) => {\n        const dateObject = new Date(timestampInMilliseconds);\n        return moment(dateObject).format('dddd, HH:mm'); // Use moment.js for formatting\n    };\n\n    return (\n        <div className=\"guest-page\">\n            <h1>Welcome as Guest</h1>\n            <div className=\"screenings-container\">\n                {/* Map over screeningsData to display movie information and screening times */}\n                {screeningsData.map(movieInfo => (\n                    <div key={movieInfo.movie.id} className=\"movie-container\">\n                        <h3>{movieInfo.movie.title}</h3>\n                        {/* Other movie information */}\n                        <div className=\"screening-info\">\n                            <h4>Screening Times:</h4>\n                            <ul>\n                                {movieInfo.allScreenings && movieInfo.allScreenings.length > 0 ? (\n                                    movieInfo.allScreenings.map(screening => (\n                                        <li key={screening.screening.id}>\n                                            {/* Use formatScreeningTime function to convert timestamp */}\n                                            <p>{formatScreeningTime(screening.screening.startTime)} - Room: {screening.room.room_name}</p>\n                                        </li>\n                                    ))\n                                ) : (\n                                    <p>No screenings available for this movie.</p>\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n                ))}\n\n            </div>\n        </div>\n    );\n}\n\nexport default GuestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}