{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/ScreeningInfo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from '../style/ScreeningInfo.module.css';\nimport moment from \"moment/moment\";\n\n/*function Seat({ isOccupied, isVip, seatNumber, onHover }) {\n    const seatClasses = `${styles.seat} ${isOccupied ? styles.occupied : ''} ${isVip ? styles.vip : ''}`;\n\n    const handleMouseEnter = () => {\n        if (onHover) {\n            onHover(true);\n        }\n    };\n\n    const handleMouseLeave = () => {\n        if (onHover) {\n            onHover(false);\n        }\n    };\n\n    return (\n        <div\n            className={seatClasses}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            tabIndex=\"0\"\n        >\n            <span className={styles.seatNumber}>{seatNumber}</span>\n        </div>\n    );\n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Seat({\n  isOccupied,\n  isVip,\n  seatNumber,\n  isRecommended\n}) {\n  const seatClasses = `${styles.seat} ${isOccupied ? styles.occupied : ''} ${isVip ? styles.vip : ''} ${isRecommended ? styles.recommended : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: seatClasses,\n    tabIndex: \"0\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.seatNumber,\n      children: seatNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_c = Seat;\nfunction ScreeningInfo() {\n  _s();\n  const [screeningInfo, setScreeningInfo] = useState(null);\n  const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n  const {\n    id\n  } = useParams();\n  const totalSeats = 100;\n  const [desiredSeats, setDesiredSeats] = useState(0);\n  const [recommendedSeats, setRecommendedSeats] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:8080/screenings/info/${id}`).then(response => response.json()).then(data => setScreeningInfo(data)).catch(error => console.error(error));\n    fetch(`http://localhost:8080/reservations/howManyReserved/${id}`).then(response => response.json()).then(data => setNumberOfReservedSeats(data)).catch(error => console.error(error));\n  }, [id]);\n  const [seats, setSeats] = useState(Array(totalSeats).fill(false)); // Define seats state here\n\n  const formatScreeningTime = timestamp => {\n    return moment(timestamp).format('LLL'); // Format the date and time as needed\n  };\n\n  // Add a method to find and recommend seats\n  const findSeats = () => {\n    // Reset previous recommendations\n    setRecommendedSeats([]);\n\n    // Algorithm to find the best seats (in the middle)\n    let bestSeats = [];\n    let minDistance = Infinity;\n    for (let i = 0; i <= seats.length - desiredSeats; i++) {\n      let block = seats.slice(i, i + desiredSeats);\n      if (!block.includes(true)) {\n        // Calculate distance of the block's center to the center of the seating area\n        const blockCenter = i + Math.floor(desiredSeats / 2);\n        const distance = Math.abs(blockCenter - totalSeats / 2);\n        if (distance < minDistance) {\n          bestSeats = Array.from({\n            length: desiredSeats\n          }, (_, idx) => i + idx);\n          minDistance = distance;\n        }\n      }\n    }\n\n    // Update state with the best found seats\n    setRecommendedSeats(bestSeats);\n  };\n  if (!screeningInfo || numberOfReservedSeats === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.screeningInfoBody,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.movieContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.basicInformation,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.movieTitle,\n          children: [\" \", screeningInfo.movie.movieName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.dateTitle,\n          children: formatScreeningTime(screeningInfo.screening.startTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.roomTitle,\n          children: [\" \", screeningInfo.room.room_name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.movieDetails,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.moviePoster,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: screeningInfo.movie.picUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SeatingArea, {\n      occupiedSeatsCount: numberOfReservedSeats,\n      totalSeats: totalSeats,\n      screeningInfo: screeningInfo,\n      seats: seats // Pass the seats state as a prop\n      ,\n      recommendedSeats: recommendedSeats // Pass the recommendedSeats state as a prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: desiredSeats,\n      onChange: e => setDesiredSeats(Number(e.target.value)),\n      placeholder: \"Number of seats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: findSeats,\n      children: \"Recommend Seats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SeatingArea, {\n      occupiedSeatsCount: numberOfReservedSeats,\n      totalSeats: totalSeats,\n      screeningInfo: screeningInfo,\n      recommendedSeats: recommendedSeats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(ScreeningInfo, \"tWHe1cdseATbKbSPuP59bcV581c=\", false, function () {\n  return [useParams];\n});\n_c2 = ScreeningInfo;\nfunction SeatingArea({\n  occupiedSeatsCount,\n  totalSeats,\n  screeningInfo\n}) {\n  _s2();\n  const [seats, setSeats] = useState([]);\n  useEffect(() => {\n    let newSeats = Array(totalSeats).fill(false);\n    let occupiedIndices = new Set();\n    while (occupiedIndices.size < occupiedSeatsCount) {\n      let randomIndex = Math.floor(Math.random() * totalSeats);\n      if (!occupiedIndices.has(randomIndex)) {\n        occupiedIndices.add(randomIndex);\n        newSeats[randomIndex] = true;\n      }\n    }\n    setSeats(newSeats);\n  }, [occupiedSeatsCount, totalSeats]);\n  const rows = 10;\n  const cols = 10;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.seatingContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.seatingInformation,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.movieTitle,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \" Available seats: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 51\n        }, this), \" \", totalSeats - occupiedSeatsCount, \" / \", totalSeats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.dateTitle,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \" Basic seat price: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 50\n        }, this), \" \", screeningInfo.room.basicSeatPrice, \" \\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.roomTitle,\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \" VIP seat price: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 50\n        }, this), \" \", screeningInfo.room.vipSeatPrice, \" \\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.seatingArea,\n      children: Array.from({\n        length: rows\n      }, (_, rowIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.row,\n          children: [Array.from({\n            length: cols\n          }, (_, colIndex) => {\n            const seatId = rowIndex * cols + colIndex;\n            const isOccupied = seats[seatId];\n            const isVip = rowIndex === rows - 1;\n            const isRecommended = recommendedSeats.includes(seatId);\n            return /*#__PURE__*/_jsxDEV(Seat, {\n              isOccupied: isOccupied,\n              isVip: isVip,\n              seatNumber: colIndex + 1,\n              isRecommended: isRecommended\n            }, seatId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.rowNumber,\n            children: rowIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.screen,\n      children: \"Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n_s2(SeatingArea, \"Eux9mB/jFStbHSIRr7ONE86NI00=\");\n_c3 = SeatingArea;\nexport default ScreeningInfo;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Seat\");\n$RefreshReg$(_c2, \"ScreeningInfo\");\n$RefreshReg$(_c3, \"SeatingArea\");","map":{"version":3,"names":["React","useState","useEffect","useParams","styles","moment","jsxDEV","_jsxDEV","Seat","isOccupied","isVip","seatNumber","isRecommended","seatClasses","seat","occupied","vip","recommended","className","tabIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ScreeningInfo","_s","screeningInfo","setScreeningInfo","numberOfReservedSeats","setNumberOfReservedSeats","id","totalSeats","desiredSeats","setDesiredSeats","recommendedSeats","setRecommendedSeats","fetch","then","response","json","data","catch","error","console","seats","setSeats","Array","fill","formatScreeningTime","timestamp","format","findSeats","bestSeats","minDistance","Infinity","i","length","block","slice","includes","blockCenter","Math","floor","distance","abs","from","_","idx","screeningInfoBody","movieContainer","basicInformation","movieTitle","movie","movieName","dateTitle","screening","startTime","roomTitle","room","room_name","movieDetails","moviePoster","src","picUrl","SeatingArea","occupiedSeatsCount","type","value","onChange","e","Number","target","placeholder","onClick","_c2","_s2","newSeats","occupiedIndices","Set","size","randomIndex","random","has","add","rows","cols","seatingContainer","seatingInformation","basicSeatPrice","vipSeatPrice","seatingArea","rowIndex","row","colIndex","seatId","rowNumber","screen","_c3","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/ScreeningInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from '../style/ScreeningInfo.module.css';\nimport moment from \"moment/moment\";\n\n/*function Seat({ isOccupied, isVip, seatNumber, onHover }) {\n    const seatClasses = `${styles.seat} ${isOccupied ? styles.occupied : ''} ${isVip ? styles.vip : ''}`;\n\n    const handleMouseEnter = () => {\n        if (onHover) {\n            onHover(true);\n        }\n    };\n\n    const handleMouseLeave = () => {\n        if (onHover) {\n            onHover(false);\n        }\n    };\n\n    return (\n        <div\n            className={seatClasses}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            tabIndex=\"0\"\n        >\n            <span className={styles.seatNumber}>{seatNumber}</span>\n        </div>\n    );\n}*/\n\nfunction Seat({ isOccupied, isVip, seatNumber, isRecommended }) {\n    const seatClasses = `${styles.seat} ${isOccupied ? styles.occupied : ''} ${isVip ? styles.vip : ''} ${isRecommended ? styles.recommended : ''}`;\n\n    return (\n        <div className={seatClasses} tabIndex=\"0\">\n            <span className={styles.seatNumber}>{seatNumber}</span>\n        </div>\n    );\n}\n\nfunction ScreeningInfo() {\n    const [screeningInfo, setScreeningInfo] = useState(null);\n    const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n    const {id} = useParams();\n    const totalSeats = 100;\n    const [desiredSeats, setDesiredSeats] = useState(0);\n    const [recommendedSeats, setRecommendedSeats] = useState([]);\n\n    useEffect(() => {\n        fetch(`http://localhost:8080/screenings/info/${id}`)\n            .then(response => response.json())\n            .then(data => setScreeningInfo(data))\n            .catch(error => console.error(error));\n\n        fetch(`http://localhost:8080/reservations/howManyReserved/${id}`)\n            .then(response => response.json())\n            .then(data => setNumberOfReservedSeats(data))\n            .catch(error => console.error(error));\n    }, [id]);\n\n    const [seats, setSeats] = useState(Array(totalSeats).fill(false)); // Define seats state here\n\n    const formatScreeningTime = timestamp => {\n        return moment(timestamp).format('LLL'); // Format the date and time as needed\n    };\n\n    // Add a method to find and recommend seats\n    const findSeats = () => {\n        // Reset previous recommendations\n        setRecommendedSeats([]);\n\n        // Algorithm to find the best seats (in the middle)\n        let bestSeats = [];\n        let minDistance = Infinity;\n        for (let i = 0; i <= seats.length - desiredSeats; i++) {\n            let block = seats.slice(i, i + desiredSeats);\n            if (!block.includes(true)) {\n                // Calculate distance of the block's center to the center of the seating area\n                const blockCenter = i + Math.floor(desiredSeats / 2);\n                const distance = Math.abs(blockCenter - totalSeats / 2);\n                if (distance < minDistance) {\n                    bestSeats = Array.from({ length: desiredSeats }, (_, idx) => i + idx);\n                    minDistance = distance;\n                }\n            }\n        }\n\n        // Update state with the best found seats\n        setRecommendedSeats(bestSeats);\n    };\n\n    if (!screeningInfo || numberOfReservedSeats === null) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className={styles.screeningInfoBody}>\n            <div className={styles.movieContainer}>\n                <div className={styles.basicInformation}>\n                    <h1 className={styles.movieTitle}> {screeningInfo.movie.movieName} </h1>\n                    <h2 className={styles.dateTitle}>{formatScreeningTime(screeningInfo.screening.startTime)}</h2>\n                    <h3 className={styles.roomTitle}> {screeningInfo.room.room_name} </h3>\n                </div>\n                <div className={styles.movieDetails}>\n                    <div className={styles.moviePoster}>\n                        <img src={screeningInfo.movie.picUrl}/>\n                    </div>\n                </div>\n            </div>\n            <SeatingArea\n                occupiedSeatsCount={numberOfReservedSeats}\n                totalSeats={totalSeats}\n                screeningInfo={screeningInfo}\n                seats={seats} // Pass the seats state as a prop\n                recommendedSeats={recommendedSeats} // Pass the recommendedSeats state as a prop\n            />\n            <input\n                type=\"number\"\n                value={desiredSeats}\n                onChange={(e) => setDesiredSeats(Number(e.target.value))}\n                placeholder=\"Number of seats\"\n            />\n            <button onClick={findSeats}>Recommend Seats</button>\n\n            {/* Pass the recommendedSeats to SeatingArea */}\n            <SeatingArea occupiedSeatsCount={numberOfReservedSeats} totalSeats={totalSeats}\n                         screeningInfo={screeningInfo} recommendedSeats={recommendedSeats}/>\n        </div>\n    );\n}\n\n\nfunction SeatingArea({occupiedSeatsCount, totalSeats, screeningInfo}) {\n    const [seats, setSeats] = useState([]);\n\n    useEffect(() => {\n        let newSeats = Array(totalSeats).fill(false);\n        let occupiedIndices = new Set();\n        while (occupiedIndices.size < occupiedSeatsCount) {\n            let randomIndex = Math.floor(Math.random() * totalSeats);\n            if (!occupiedIndices.has(randomIndex)) {\n                occupiedIndices.add(randomIndex);\n                newSeats[randomIndex] = true;\n            }\n        }\n        setSeats(newSeats);\n    }, [occupiedSeatsCount, totalSeats]);\n\n    const rows = 10;\n    const cols = 10;\n\n    return (\n        <div className={styles.seatingContainer}>\n            <div className={styles.seatingInformation}>\n                <h1 className={styles.movieTitle}><b> Available seats: </b> {totalSeats - occupiedSeatsCount} / {totalSeats}</h1>\n                <h2 className={styles.dateTitle}><b> Basic seat price: </b> {screeningInfo.room.basicSeatPrice} €</h2>\n                <h3 className={styles.roomTitle}><b> VIP seat price: </b> {screeningInfo.room.vipSeatPrice} €</h3>\n            </div>\n            <div className={styles.seatingArea}>\n                {Array.from({length: rows}, (_, rowIndex) => {\n                    return (\n                        <div key={rowIndex} className={styles.row}>\n                            {Array.from({length: cols}, (_, colIndex) => {\n                                const seatId = rowIndex * cols + colIndex;\n                                const isOccupied = seats[seatId];\n                                const isVip = rowIndex === rows - 1;\n                                const isRecommended = recommendedSeats.includes(seatId);\n                                return (\n                                    <Seat\n                                        key={seatId}\n                                        isOccupied={isOccupied}\n                                        isVip={isVip}\n                                        seatNumber={colIndex + 1}\n                                        isRecommended={isRecommended}\n                                    />\n                                );\n                            })}\n                            <div className={styles.rowNumber}>{rowIndex + 1}</div>\n                        </div>\n                    );\n                })}\n            </div>\n            <div className={styles.screen}>Screen</div>\n        </div>\n\n    );\n}\n\nexport default ScreeningInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}