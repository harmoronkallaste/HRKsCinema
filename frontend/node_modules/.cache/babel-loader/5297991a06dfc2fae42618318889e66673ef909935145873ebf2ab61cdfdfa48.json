{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/AllScreenings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../style/AllScreenings.module.css';\nimport moment from 'moment';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllScreenings() {\n  _s();\n  const [allScreenings, setAllScreenings] = useState([]);\n  const [screenings, setScreenings] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(moment().format('ddd')); // Default to current day of week\n  const {\n    id\n  } = useParams();\n  const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8080/screenings/allScreenings').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Screenings data:\", data); // Add this to see the actual structure of response\n      if (!Array.isArray(data)) {\n        throw new Error('Data is not an array!');\n      }\n      setAllScreenings(data);\n      filterScreeningsByDay(selectedDay, data);\n    }).catch(error => {\n      console.error('Error fetching screenings:', error);\n    });\n    fetch(`http://localhost:8080/reservations/howManyReserved/${id}`).then(response => response.json()).then(data => setNumberOfReservedSeats(data)).catch(error => console.error(error));\n  }, []);\n  const filterScreeningsByDay = (day, screeningsData = allScreenings) => {\n    const filtered = screeningsData.filter(screening => moment(screening.screening.startTime).format('ddd') === day);\n    setScreenings(filtered);\n  };\n  const handleDayButtonClick = day => {\n    setSelectedDay(day);\n    filterScreeningsByDay(day);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.allScreenings,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.menuBar,\n      children: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.dayButton} ${selectedDay === day ? styles.active : ''}`,\n        onClick: () => handleDayButtonClick(day),\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.screeningsList,\n      children: screenings.map(screening => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.screeningContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.moviePoster,\n          style: {\n            backgroundImage: `url(${screening.movie.picUrl})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.movieInfoAndButtons,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.movieInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: screening.movie.movieName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", moment(screening.screening.startTime).format('LLL'), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Rating: \", screening.movie.rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Room: \", screening.room.room_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Available Seats: \", screening.room.totalSeats - numberOfReservedSeats, \" / screening.room.totalSeats\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.buttonGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.screeningButton,\n              children: \"Get tickets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.screeningButton,\n              children: \"View movie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.screeningButton,\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, screening.screening.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(AllScreenings, \"eiQfLTy7wBus8rpvXaXAJTIq2xU=\", false, function () {\n  return [useParams];\n});\n_c = AllScreenings;\nexport default AllScreenings;\nvar _c;\n$RefreshReg$(_c, \"AllScreenings\");","map":{"version":3,"names":["React","useState","useEffect","styles","moment","useParams","jsxDEV","_jsxDEV","AllScreenings","_s","allScreenings","setAllScreenings","screenings","setScreenings","selectedDay","setSelectedDay","format","id","numberOfReservedSeats","setNumberOfReservedSeats","fetch","then","response","ok","Error","status","json","data","console","log","Array","isArray","filterScreeningsByDay","catch","error","day","screeningsData","filtered","filter","screening","startTime","handleDayButtonClick","className","children","menuBar","map","dayButton","active","onClick","fileName","_jsxFileName","lineNumber","columnNumber","screeningsList","screeningContainer","moviePoster","style","backgroundImage","movie","picUrl","movieInfoAndButtons","movieInfo","movieName","rating","room","room_name","totalSeats","buttonGroup","screeningButton","_c","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/AllScreenings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from '../style/AllScreenings.module.css';\nimport moment from 'moment';\nimport {useParams} from \"react-router-dom\";\n\nfunction AllScreenings() {\n    const [allScreenings, setAllScreenings] = useState([]);\n    const [screenings, setScreenings] = useState([]);\n    const [selectedDay, setSelectedDay] = useState(moment().format('ddd')); // Default to current day of week\n    const {id} = useParams();\n    const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n\n    useEffect(() => {\n        fetch('http://localhost:8080/screenings/allScreenings')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(data => {\n                console.log(\"Screenings data:\", data); // Add this to see the actual structure of response\n                if (!Array.isArray(data)) {\n                    throw new Error('Data is not an array!');\n                }\n                setAllScreenings(data);\n                filterScreeningsByDay(selectedDay, data);\n            })\n            .catch(error => {\n                console.error('Error fetching screenings:', error);\n            });\n\n        fetch(`http://localhost:8080/reservations/howManyReserved/${id}`)\n            .then(response => response.json())\n            .then(data => setNumberOfReservedSeats(data))\n            .catch(error => console.error(error));\n\n    }, []);\n\n    const filterScreeningsByDay = (day, screeningsData = allScreenings) => {\n        const filtered = screeningsData.filter((screening) =>\n            moment(screening.screening.startTime).format('ddd') === day\n        );\n        setScreenings(filtered);\n    };\n\n    const handleDayButtonClick = (day) => {\n        setSelectedDay(day);\n        filterScreeningsByDay(day);\n    };\n\n    return (\n        <div className={styles.allScreenings}>\n            <div className={styles.menuBar}>\n                {['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'].map((day) => (\n                    <button\n                        key={day}\n                        className={`${styles.dayButton} ${selectedDay === day ? styles.active : ''}`}\n                        onClick={() => handleDayButtonClick(day)}\n                    >\n                        {day}\n                    </button>\n                ))}\n            </div>\n            <div className={styles.screeningsList}>\n                {screenings.map((screening) => (\n                    <div key={screening.screening.id} className={styles.screeningContainer}>\n                        <div className={styles.moviePoster} style={{backgroundImage: `url(${screening.movie.picUrl})`}}>\n                            {/* Image will be displayed via background */}\n                        </div>\n                        <div className={styles.movieInfoAndButtons}>\n                            <div className={styles.movieInfo}>\n                                <h2>{screening.movie.movieName}</h2>\n                                <h3> {moment(screening.screening.startTime).format('LLL')} </h3>\n                                <p>Rating: {screening.movie.rating}</p>\n                                <p>Room: {screening.room.room_name}</p>\n                                <p>Available Seats: {screening.room.totalSeats - numberOfReservedSeats} / screening.room.totalSeats</p>\n                            </div>\n                            <div className={styles.buttonGroup}>\n                                <button className={styles.screeningButton}>Get tickets</button>\n                                <button className={styles.screeningButton}>View movie</button>\n                                <button className={styles.screeningButton}>Schedule</button>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n        </div>\n    );\n}\n\nexport default AllScreenings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}