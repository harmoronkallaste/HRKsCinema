{"ast":null,"code":"var _jsxFileName = \"/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/ScreeningInfo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './ScreeningInfo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Seat({\n  isOccupied,\n  isVip,\n  seatNumber\n}) {\n  const seatClasses = `${styles.seat} ${isOccupied ? styles.occupied : ''} ${isVip ? styles.vip : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: seatClasses,\n    tabIndex: \"0\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.seatNumber,\n      children: seatNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = Seat;\nfunction SeatingArea({\n  occupiedSeatsCount,\n  totalSeats\n}) {\n  _s();\n  const [seats, setSeats] = useState([]);\n  useEffect(() => {\n    let newSeats = Array(totalSeats).fill(false); // Initialize all seats as not occupied\n    let occupiedIndices = new Set();\n    while (occupiedIndices.size < occupiedSeatsCount) {\n      let randomIndex = Math.floor(Math.random() * totalSeats);\n      if (!occupiedIndices.has(randomIndex)) {\n        // Ensure the seat isn't already occupied\n        occupiedIndices.add(randomIndex);\n        newSeats[randomIndex] = true; // Mark the seat as occupied\n      }\n    }\n    setSeats(newSeats);\n  }, [occupiedSeatsCount, totalSeats]);\n  const rows = 10;\n  const cols = 10;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.screen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.seatingArea,\n      children: Array.from({\n        length: rows\n      }, (_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.rowNumber,\n          children: rowIndex + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), Array.from({\n          length: cols\n        }, (_, colIndex) => {\n          const seatNumber = rowIndex * cols + colIndex;\n          const isOccupied = seats[seatNumber]; // Check if the seat is occupied\n          const isVip = rowIndex === 9; // The 10th row is VIP\n          return /*#__PURE__*/_jsxDEV(Seat, {\n            isOccupied: isOccupied,\n            isVip: isVip,\n            seatNumber: seatNumber + 1\n          }, seatNumber, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this);\n        })]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SeatingArea, \"Eux9mB/jFStbHSIRr7ONE86NI00=\");\n_c2 = SeatingArea;\nfunction ScreeningInfo() {\n  _s2();\n  const [screeningInfo, setScreeningInfo] = useState(null);\n  const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n  const {\n    id\n  } = useParams();\n  const totalSeats = 100; // Total number of seats for simplicity\n\n  useEffect(() => {\n    // Fetch the screening info\n    fetch(`http://localhost:8080/screenings/info/${id}`).then(response => response.json()).then(data => setScreeningInfo(data)).catch(error => console.error(error));\n\n    // Fetch the number of reserved seats\n    fetch(`http://localhost:8080/reservations/howManyReserved/${id}`).then(response => response.json()).then(data => setNumberOfReservedSeats(data)).catch(error => console.error(error));\n  }, [id]);\n  if (!screeningInfo || numberOfReservedSeats === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.screeningInfoBody,\n    children: /*#__PURE__*/_jsxDEV(SeatingArea, {\n      occupiedSeatsCount: numberOfReservedSeats,\n      totalSeats: totalSeats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s2(ScreeningInfo, \"JiCji2Pw5fJMT9qEupqf6xL5m0k=\", false, function () {\n  return [useParams];\n});\n_c3 = ScreeningInfo;\nexport default ScreeningInfo;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Seat\");\n$RefreshReg$(_c2, \"SeatingArea\");\n$RefreshReg$(_c3, \"ScreeningInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Seat","isOccupied","isVip","seatNumber","seatClasses","seat","occupied","vip","className","tabIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","SeatingArea","occupiedSeatsCount","totalSeats","_s","seats","setSeats","newSeats","Array","fill","occupiedIndices","Set","size","randomIndex","Math","floor","random","has","add","rows","cols","screen","seatingArea","from","length","_","rowIndex","row","rowNumber","colIndex","_c2","ScreeningInfo","_s2","screeningInfo","setScreeningInfo","numberOfReservedSeats","setNumberOfReservedSeats","id","fetch","then","response","json","data","catch","error","console","screeningInfoBody","_c3","$RefreshReg$"],"sources":["/Users/harmoronkallaste/Desktop/kinoapp/frontend/src/pages/ScreeningInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './ScreeningInfo.module.css';\n\nfunction Seat({ isOccupied, isVip, seatNumber }) {\n    const seatClasses = `${styles.seat} ${isOccupied ? styles.occupied : ''} ${isVip ? styles.vip : ''}`;\n\n    return (\n        <div className={seatClasses} tabIndex=\"0\">\n            <span className={styles.seatNumber}>{seatNumber}</span>\n        </div>\n    );\n}\n\nfunction SeatingArea({ occupiedSeatsCount, totalSeats }) {\n    const [seats, setSeats] = useState([]);\n\n    useEffect(() => {\n        let newSeats = Array(totalSeats).fill(false); // Initialize all seats as not occupied\n        let occupiedIndices = new Set();\n        while (occupiedIndices.size < occupiedSeatsCount) {\n            let randomIndex = Math.floor(Math.random() * totalSeats);\n            if (!occupiedIndices.has(randomIndex)) { // Ensure the seat isn't already occupied\n                occupiedIndices.add(randomIndex);\n                newSeats[randomIndex] = true; // Mark the seat as occupied\n            }\n        }\n        setSeats(newSeats);\n    }, [occupiedSeatsCount, totalSeats]);\n\n    const rows = 10;\n    const cols = 10;\n\n    return (\n        <>\n            <div className={styles.screen}></div> {/* This div represents the cinema screen */}\n            <div className={styles.seatingArea}>\n                {Array.from({ length: rows }, (_, rowIndex) => (\n                    <div key={rowIndex} className={styles.row}>\n                        <div className={styles.rowNumber}>{rowIndex + 1}</div>\n                        {Array.from({ length: cols }, (_, colIndex) => {\n                            const seatNumber = rowIndex * cols + colIndex;\n                            const isOccupied = seats[seatNumber]; // Check if the seat is occupied\n                            const isVip = rowIndex === 9; // The 10th row is VIP\n                            return (\n                                <Seat\n                                    key={seatNumber}\n                                    isOccupied={isOccupied}\n                                    isVip={isVip}\n                                    seatNumber={seatNumber + 1}\n                                />\n                            );\n                        })}\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n}\n\nfunction ScreeningInfo() {\n    const [screeningInfo, setScreeningInfo] = useState(null);\n    const [numberOfReservedSeats, setNumberOfReservedSeats] = useState(null);\n    const { id } = useParams();\n    const totalSeats = 100; // Total number of seats for simplicity\n\n    useEffect(() => {\n        // Fetch the screening info\n        fetch(`http://localhost:8080/screenings/info/${id}`)\n            .then(response => response.json())\n            .then(data => setScreeningInfo(data))\n            .catch(error => console.error(error));\n\n        // Fetch the number of reserved seats\n        fetch(`http://localhost:8080/reservations/howManyReserved/${id}`)\n            .then(response => response.json())\n            .then(data => setNumberOfReservedSeats(data))\n            .catch(error => console.error(error));\n    }, [id]);\n\n    if (!screeningInfo || numberOfReservedSeats === null) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className={styles.screeningInfoBody}>\n            {/* ...movie information display */}\n            <SeatingArea occupiedSeatsCount={numberOfReservedSeats} totalSeats={totalSeats} />\n            {/* ...other components */}\n        </div>\n    );\n}\n\nexport default ScreeningInfo;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,IAAIA,CAAC;EAAEC,UAAU;EAAEC,KAAK;EAAEC;AAAW,CAAC,EAAE;EAC7C,MAAMC,WAAW,GAAI,GAAET,MAAM,CAACU,IAAK,IAAGJ,UAAU,GAAGN,MAAM,CAACW,QAAQ,GAAG,EAAG,IAAGJ,KAAK,GAAGP,MAAM,CAACY,GAAG,GAAG,EAAG,EAAC;EAEpG,oBACIV,OAAA;IAAKW,SAAS,EAAEJ,WAAY;IAACK,QAAQ,EAAC,GAAG;IAAAC,QAAA,eACrCb,OAAA;MAAMW,SAAS,EAAEb,MAAM,CAACQ,UAAW;MAAAO,QAAA,EAAEP;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd;AAACC,EAAA,GARQf,IAAI;AAUb,SAASgB,WAAWA,CAAC;EAAEC,kBAAkB;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,IAAI6B,QAAQ,GAAGC,KAAK,CAACL,UAAU,CAAC,CAACM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9C,IAAIC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC/B,OAAOD,eAAe,CAACE,IAAI,GAAGV,kBAAkB,EAAE;MAC9C,IAAIW,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGb,UAAU,CAAC;MACxD,IAAI,CAACO,eAAe,CAACO,GAAG,CAACJ,WAAW,CAAC,EAAE;QAAE;QACrCH,eAAe,CAACQ,GAAG,CAACL,WAAW,CAAC;QAChCN,QAAQ,CAACM,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC;MAClC;IACJ;IACAP,QAAQ,CAACC,QAAQ,CAAC;EACtB,CAAC,EAAE,CAACL,kBAAkB,EAAEC,UAAU,CAAC,CAAC;EAEpC,MAAMgB,IAAI,GAAG,EAAE;EACf,MAAMC,IAAI,GAAG,EAAE;EAEf,oBACItC,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACIb,OAAA;MAAKW,SAAS,EAAEb,MAAM,CAACyC;IAAO;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,KAAC,eACtCjB,OAAA;MAAKW,SAAS,EAAEb,MAAM,CAAC0C,WAAY;MAAA3B,QAAA,EAC9Ba,KAAK,CAACe,IAAI,CAAC;QAAEC,MAAM,EAAEL;MAAK,CAAC,EAAE,CAACM,CAAC,EAAEC,QAAQ,kBACtC5C,OAAA;QAAoBW,SAAS,EAAEb,MAAM,CAAC+C,GAAI;QAAAhC,QAAA,gBACtCb,OAAA;UAAKW,SAAS,EAAEb,MAAM,CAACgD,SAAU;UAAAjC,QAAA,EAAE+B,QAAQ,GAAG;QAAC;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACrDS,KAAK,CAACe,IAAI,CAAC;UAAEC,MAAM,EAAEJ;QAAK,CAAC,EAAE,CAACK,CAAC,EAAEI,QAAQ,KAAK;UAC3C,MAAMzC,UAAU,GAAGsC,QAAQ,GAAGN,IAAI,GAAGS,QAAQ;UAC7C,MAAM3C,UAAU,GAAGmB,KAAK,CAACjB,UAAU,CAAC,CAAC,CAAC;UACtC,MAAMD,KAAK,GAAGuC,QAAQ,KAAK,CAAC,CAAC,CAAC;UAC9B,oBACI5C,OAAA,CAACG,IAAI;YAEDC,UAAU,EAAEA,UAAW;YACvBC,KAAK,EAAEA,KAAM;YACbC,UAAU,EAAEA,UAAU,GAAG;UAAE,GAHtBA,UAAU;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIlB,CAAC;QAEV,CAAC,CAAC;MAAA,GAdI2B,QAAQ;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACR,CAAC;AAEX;AAACK,EAAA,CA5CQH,WAAW;AAAA6B,GAAA,GAAX7B,WAAW;AA8CpB,SAAS8B,aAAaA,CAAA,EAAG;EAAAC,GAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzD,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC0D,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;EACxE,MAAM;IAAE4D;EAAG,CAAC,GAAG1D,SAAS,CAAC,CAAC;EAC1B,MAAMwB,UAAU,GAAG,GAAG,CAAC,CAAC;;EAExBzB,SAAS,CAAC,MAAM;IACZ;IACA4D,KAAK,CAAE,yCAAwCD,EAAG,EAAC,CAAC,CAC/CE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIR,gBAAgB,CAACQ,IAAI,CAAC,CAAC,CACpCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;;IAEzC;IACAN,KAAK,CAAE,sDAAqDD,EAAG,EAAC,CAAC,CAC5DE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,wBAAwB,CAACM,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAI,CAACJ,aAAa,IAAIE,qBAAqB,KAAK,IAAI,EAAE;IAClD,oBAAOrD,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIjB,OAAA;IAAKW,SAAS,EAAEb,MAAM,CAACkE,iBAAkB;IAAAnD,QAAA,eAErCb,OAAA,CAACmB,WAAW;MAACC,kBAAkB,EAAEiC,qBAAsB;MAAChC,UAAU,EAAEA;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjF,CAAC;AAEd;AAACiC,GAAA,CA/BQD,aAAa;EAAA,QAGHpD,SAAS;AAAA;AAAAoE,GAAA,GAHnBhB,aAAa;AAiCtB,eAAeA,aAAa;AAAC,IAAA/B,EAAA,EAAA8B,GAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAhD,EAAA;AAAAgD,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}